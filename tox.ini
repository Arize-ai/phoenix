[tox]
isolated_build = True
skipsdist = True

[testenv]
package = wheel
wheel_build_env = .pkg

[testenv:phoenix_evals]
changedir = packages/phoenix-evals/
deps =
  -r requirements/ci.txt
commands_pre = uv pip install --reinstall .[test]
commands =
  uv pip list
  mypy .
  pytest -ra -x {posargs:.}

[testenv:phoenix_otel]
changedir = packages/phoenix-otel/
deps =
  -r requirements/ci.txt
commands_pre = uv pip install --reinstall .[test]
commands =
  uv pip list
  mypy .
  ; pytest -ra -x {posargs:.}

[testenv:integration_tests]
pass_env =
  CI_TEST_DB_BACKEND
changedir = tests/integration
deps =
  -r requirements/integration-tests.txt
commands_pre =
  uv pip install --reinstall ../../.[pg]
commands =
  uv pip list
  pytest {posargs:.}

[testenv:unit_tests]
changedir = tests
deps =
  -r requirements/unit-tests.txt
commands_pre =
  uv pip install --reinstall ../.
commands =
  uv pip list
  pytest --ignore=integration {posargs:.}

[testenv:type_check]
deps =
  -r requirements/type-check.txt
commands_pre =
  uv pip install --reinstall .
commands =
  uv pip list
  mypy {posargs:.}

[testenv:clean_jupyter_notebooks]
deps =
  -r requirements/clean-jupyter-notebooks.txt
commands =
  uv pip list
  jupyter nbconvert --ClearOutputPreprocessor.enabled=True --ClearMetadataPreprocessor.enabled=True --inplace {posargs}

[testenv:build_graphql_schema]
changedir = app
deps =
  -r requirements/build-graphql-schema.txt
commands_pre =
  uv pip install --reinstall ../.
commands =
  uv pip list
  strawberry export-schema phoenix.server.api.schema:schema -o schema.graphql

[testenv:build_openapi_schema]
changedir = schemas
commands_pre =
  uv pip install --reinstall ../.
commands =
  uv pip list
  python -m phoenix.server.api.openapi.main -o openapi.json

[testenv:compile_protobuf]
deps =
  -r requirements/compile-protobuf.txt
commands =
  uv pip list
  python -m grpc_tools.protoc -I src/phoenix/proto --python_out=src/phoenix --mypy_out=src/phoenix src/phoenix/proto/trace/v1/evaluation.proto

[testenv:add_symlinks]
changedir = src/phoenix
allowlist_externals =
  sh
commands =
  sh -c '[ -e evals ] || ln -s ../../packages/phoenix-evals/src/phoenix/evals evals'
  sh -c '[ -e otel ] || ln -s ../../packages/phoenix-otel/src/phoenix/otel otel'

[testenv:remove_symlinks]
changedir = src/phoenix
allowlist_externals =
  unlink
commands =
  unlink evals
  unlink otel

[testenv:phoenix_main]
pass_env=
  PHOENIX_PORT
  PHOENIX_GRPC_PORT
  PHOENIX_HOST_ROOT_PATH
  PHOENIX_SQL_DATABASE_URL
  PHOENIX_SQL_DATABASE_SCHEMA
commands_pre =
  uv tool install arize-phoenix@. \
    --reinstall-package arize-phoenix \
    --with-requirements requirements/dev.txt \
    --compile-bytecode
commands =
  uv tool run arize-phoenix {posargs:serve}
