[project]
name = "arize-phoenix-client"
description = "LLM Observability"
readme = "README.md"
requires-python = ">=3.9, <3.14"
license = { text = "Elastic-2.0" }
license-files = { paths = ["LICENSE", "IP_NOTICE"] }
keywords = [
  "Observability",
  "Monitoring",
  "Explainability",
]
authors = [
  { name = "Arize AI", email = "phoenix-devs@arize.com" },
]
classifiers = [
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
]
version = "1.0.3"
dependencies = [
  "httpx",
  "typing-extensions",
]

[project.urls]
Documentation = "https://docs.arize.com/phoenix/"
Issues = "https://github.com/Arize-ai/phoenix/issues"
Source = "https://github.com/Arize-ai/phoenix"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/phoenix"]

[tool.hatch.build]
only-packages = true

[tool.hatch.envs.publish]
dependencies = [
  "check-wheel-contents",
  "twine",
]

[tool.hatch.envs.publish.scripts]
testpypi = [
  "check-wheel-contents dist/",
  "twine upload --verbose --repository testpypi dist/*",
]
pypi = [
  "check-wheel-contents dist/",
  "twine upload --verbose dist/*",
]

[tool.ruff]
exclude = [
  "dist",
]
extend-include = ["*.ipynb"]
line-length = 100
target-version = "py39"

[tool.ruff.lint]
select = ["E", "F", "W", "I"]

[tool.ruff.lint.isort]
force-single-line = false

[tool.ruff.lint.per-file-ignores]
"*.ipynb" = ["E402", "E501"]
"src/phoenix/client/__generated__/v1/*.py" = ["E501"]

[tool.ruff.format]
line-ending = "native"

[tool.mypy]
plugins = ["pydantic.mypy"]
explicit_package_bases = true
strict = true
exclude = [
  "dist/",
  "examples",
  "tests/canary",
  "scripts/",
  "src/phoenix/client/helpers/sdk/",
]

[tool.pyright]
typeCheckingMode = "strict"
pythonVersion = "3.9"
reportUnusedFunction = false
exclude = [
  "dist/",
  "examples",
  "tests/canary/",
  "scripts/",
  "src/phoenix/client/helpers/sdk/",
]


[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
testpaths = [
  "tests",
]
