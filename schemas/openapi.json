{
  "openapi": "3.1.0",
  "info": {
    "title": "Arize-Phoenix REST API",
    "description": "Schema for Arize-Phoenix REST API",
    "version": "1.0"
  },
  "paths": {
    "/v1/annotation_configs": {
      "get": {
        "tags": [
          "annotation_configs"
        ],
        "summary": "List annotation configurations",
        "operationId": "list_annotation_configs_v1_annotation_configs_get",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "exclusiveMinimum": 0,
              "description": "Maximum number of configs to return",
              "default": 50,
              "title": "Limit"
            },
            "description": "Maximum number of configs to return"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AnnotationConfigResponse"
                  },
                  "title": "Response List Annotation Configs V1 Annotation Configs Get"
                }
              }
            }
          },
          "403": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Forbidden"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/annotation_configs/{config_identifier}": {
      "get": {
        "tags": [
          "annotation_configs"
        ],
        "summary": "Get an annotation configuration by ID or name",
        "operationId": "get_annotation_config_by_name_or_id_v1_annotation_configs__config_identifier__get",
        "parameters": [
          {
            "name": "config_identifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID or name of the annotation configuration",
              "title": "Config Identifier"
            },
            "description": "ID or name of the annotation configuration"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotationConfigResponse"
                }
              }
            }
          },
          "403": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Forbidden"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/annotation_configs/continuous": {
      "post": {
        "tags": [
          "annotation_configs"
        ],
        "summary": "Create a continuous annotation configuration",
        "operationId": "create_continuous_annotation_config_v1_annotation_configs_continuous_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateContinuousAnnotationConfigPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotationConfigResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/annotation_configs/categorical": {
      "post": {
        "tags": [
          "annotation_configs"
        ],
        "summary": "Create a categorical annotation configuration",
        "operationId": "create_categorical_annotation_config_v1_annotation_configs_categorical_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCategoricalAnnotationConfigPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotationConfigResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/annotation_configs/freeform": {
      "post": {
        "tags": [
          "annotation_configs"
        ],
        "summary": "Create a freeform annotation configuration",
        "operationId": "create_freeform_annotation_config_v1_annotation_configs_freeform_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFreeformAnnotationConfigPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotationConfigResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/annotation_configs/{config_id}": {
      "delete": {
        "tags": [
          "annotation_configs"
        ],
        "summary": "Delete an annotation configuration",
        "operationId": "delete_annotation_config_v1_annotation_configs__config_id__delete",
        "parameters": [
          {
            "name": "config_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the annotation configuration",
              "title": "Config Id"
            },
            "description": "ID of the annotation configuration"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "title": "Response Delete Annotation Config V1 Annotation Configs  Config Id  Delete"
                }
              }
            }
          },
          "403": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Forbidden"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/datasets": {
      "get": {
        "tags": [
          "datasets"
        ],
        "summary": "List datasets",
        "operationId": "listDatasets",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Cursor for pagination",
              "title": "Cursor"
            },
            "description": "Cursor for pagination"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "An optional dataset name to filter by",
              "title": "Name"
            },
            "description": "An optional dataset name to filter by"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "exclusiveMinimum": 0,
              "description": "The max number of datasets to return at a time.",
              "default": 10,
              "title": "Limit"
            },
            "description": "The max number of datasets to return at a time."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListDatasetsResponseBody"
                }
              }
            }
          },
          "403": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Forbidden"
          },
          "422": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/v1/datasets/{id}": {
      "delete": {
        "tags": [
          "datasets"
        ],
        "summary": "Delete dataset by ID",
        "operationId": "deleteDatasetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the dataset to delete.",
              "title": "Id"
            },
            "description": "The ID of the dataset to delete."
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "403": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Dataset not found"
          },
          "422": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Invalid dataset ID"
          }
        }
      },
      "get": {
        "tags": [
          "datasets"
        ],
        "summary": "Get dataset by ID",
        "operationId": "getDataset",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the dataset",
              "title": "Id"
            },
            "description": "The ID of the dataset"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDatasetResponseBody"
                }
              }
            }
          },
          "403": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/datasets/{id}/versions": {
      "get": {
        "tags": [
          "datasets"
        ],
        "summary": "List dataset versions",
        "operationId": "listDatasetVersionsByDatasetId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the dataset",
              "title": "Id"
            },
            "description": "The ID of the dataset"
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Cursor for pagination",
              "title": "Cursor"
            },
            "description": "Cursor for pagination"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "exclusiveMinimum": 0,
              "description": "The max number of dataset versions to return at a time",
              "default": 10,
              "title": "Limit"
            },
            "description": "The max number of dataset versions to return at a time"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListDatasetVersionsResponseBody"
                }
              }
            }
          },
          "403": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Forbidden"
          },
          "422": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/v1/datasets/upload": {
      "post": {
        "tags": [
          "datasets"
        ],
        "summary": "Upload dataset from JSON, CSV, or PyArrow",
        "operationId": "uploadDataset",
        "parameters": [
          {
            "name": "sync",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "If true, fulfill request synchronously and return JSON containing dataset_id.",
              "default": false,
              "title": "Sync"
            },
            "description": "If true, fulfill request synchronously and return JSON containing dataset_id."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/UploadDatasetResponseBody"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Response Uploaddataset"
                }
              }
            }
          },
          "403": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Forbidden"
          },
          "409": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Dataset of the same name already exists"
          },
          "422": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Invalid request body"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "inputs"
                ],
                "properties": {
                  "action": {
                    "type": "string",
                    "enum": [
                      "create",
                      "append"
                    ]
                  },
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "inputs": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    }
                  },
                  "outputs": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    }
                  },
                  "metadata": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    }
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "input_keys[]",
                  "output_keys[]",
                  "file"
                ],
                "properties": {
                  "action": {
                    "type": "string",
                    "enum": [
                      "create",
                      "append"
                    ]
                  },
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "input_keys[]": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "uniqueItems": true
                  },
                  "output_keys[]": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "uniqueItems": true
                  },
                  "metadata_keys[]": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "uniqueItems": true
                  },
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/datasets/{id}/examples": {
      "get": {
        "tags": [
          "datasets"
        ],
        "summary": "Get examples from a dataset",
        "operationId": "getDatasetExamples",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the dataset",
              "title": "Id"
            },
            "description": "The ID of the dataset"
          },
          {
            "name": "version_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "The ID of the dataset version (if omitted, returns data from the latest version)",
              "title": "Version Id"
            },
            "description": "The ID of the dataset version (if omitted, returns data from the latest version)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListDatasetExamplesResponseBody"
                }
              }
            }
          },
          "403": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/datasets/{id}/csv": {
      "get": {
        "tags": [
          "datasets"
        ],
        "summary": "Download dataset examples as CSV file",
        "operationId": "getDatasetCsv",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the dataset",
              "title": "Id"
            },
            "description": "The ID of the dataset"
          },
          {
            "name": "version_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "The ID of the dataset version (if omitted, returns data from the latest version)",
              "title": "Version Id"
            },
            "description": "The ID of the dataset version (if omitted, returns data from the latest version)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "text/csv": {
                "schema": {
                  "type": "string",
                  "contentMediaType": "text/csv"
                }
              }
            }
          },
          "403": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Forbidden"
          },
          "422": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/v1/datasets/{id}/jsonl/openai_ft": {
      "get": {
        "tags": [
          "datasets"
        ],
        "summary": "Download dataset examples as OpenAI fine-tuning JSONL file",
        "operationId": "getDatasetJSONLOpenAIFineTuning",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the dataset",
              "title": "Id"
            },
            "description": "The ID of the dataset"
          },
          {
            "name": "version_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "The ID of the dataset version (if omitted, returns data from the latest version)",
              "title": "Version Id"
            },
            "description": "The ID of the dataset version (if omitted, returns data from the latest version)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Forbidden"
          },
          "422": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Invalid dataset or version ID"
          }
        }
      }
    },
    "/v1/datasets/{id}/jsonl/openai_evals": {
      "get": {
        "tags": [
          "datasets"
        ],
        "summary": "Download dataset examples as OpenAI evals JSONL file",
        "operationId": "getDatasetJSONLOpenAIEvals",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the dataset",
              "title": "Id"
            },
            "description": "The ID of the dataset"
          },
          {
            "name": "version_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "The ID of the dataset version (if omitted, returns data from the latest version)",
              "title": "Version Id"
            },
            "description": "The ID of the dataset version (if omitted, returns data from the latest version)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Forbidden"
          },
          "422": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Invalid dataset or version ID"
          }
        }
      }
    },
    "/v1/datasets/{dataset_id}/experiments": {
      "post": {
        "tags": [
          "experiments"
        ],
        "summary": "Create experiment on a dataset",
        "operationId": "createExperiment",
        "parameters": [
          {
            "name": "dataset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Dataset ID"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateExperimentRequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Experiment retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateExperimentResponseBody"
                }
              }
            }
          },
          "403": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Dataset or DatasetVersion not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "experiments"
        ],
        "summary": "List experiments by dataset",
        "operationId": "listExperiments",
        "parameters": [
          {
            "name": "dataset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Dataset ID"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Experiments retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListExperimentsResponseBody"
                }
              }
            }
          },
          "403": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Forbidden"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/experiments/{experiment_id}": {
      "get": {
        "tags": [
          "experiments"
        ],
        "summary": "Get experiment by ID",
        "operationId": "getExperiment",
        "parameters": [
          {
            "name": "experiment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Experiment Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Experiment retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetExperimentResponseBody"
                }
              }
            }
          },
          "403": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Experiment not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/experiments/{experiment_id}/json": {
      "get": {
        "tags": [
          "experiments"
        ],
        "summary": "Download experiment runs as a JSON file",
        "operationId": "getExperimentJSON",
        "parameters": [
          {
            "name": "experiment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Experiment ID"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Experiment not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/experiments/{experiment_id}/csv": {
      "get": {
        "tags": [
          "experiments"
        ],
        "summary": "Download experiment runs as a CSV file",
        "operationId": "getExperimentCSV",
        "parameters": [
          {
            "name": "experiment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Experiment ID"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              },
              "text/csv": {
                "schema": {
                  "type": "string",
                  "contentMediaType": "text/csv"
                }
              }
            }
          },
          "403": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Forbidden"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/span_annotations": {
      "post": {
        "tags": [
          "spans"
        ],
        "summary": "Create span annotations",
        "operationId": "annotateSpans",
        "parameters": [
          {
            "name": "sync",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "If true, fulfill request synchronously.",
              "default": false,
              "title": "Sync"
            },
            "description": "If true, fulfill request synchronously."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnnotateSpansRequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Span annotations inserted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotateSpansResponseBody"
                }
              }
            }
          },
          "403": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Span not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/evaluations": {
      "post": {
        "tags": [
          "traces"
        ],
        "summary": "Add span, trace, or document evaluations",
        "operationId": "addEvaluations",
        "parameters": [
          {
            "name": "content-type",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Content-Type"
            }
          },
          {
            "name": "content-encoding",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Content-Encoding"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "403": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Forbidden"
          },
          "415": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Unsupported content type, only gzipped protobuf and pandas-arrow are supported"
          },
          "422": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/x-protobuf": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            },
            "application/x-pandas-arrow": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "traces"
        ],
        "summary": "Get span, trace, or document evaluations from a project",
        "operationId": "getEvaluations",
        "parameters": [
          {
            "name": "project_name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "The name of the project to get evaluations from (if omitted, evaluations will be drawn from the `default` project)",
              "title": "Project Name"
            },
            "description": "The name of the project to get evaluations from (if omitted, evaluations will be drawn from the `default` project)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "403": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/prompts": {
      "get": {
        "tags": [
          "prompts"
        ],
        "summary": "Get all prompts",
        "operationId": "getPrompts",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Cursor for pagination (base64-encoded prompt ID)",
              "title": "Cursor"
            },
            "description": "Cursor for pagination (base64-encoded prompt ID)"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "exclusiveMinimum": 0,
              "description": "The max number of prompts to return at a time.",
              "default": 100,
              "title": "Limit"
            },
            "description": "The max number of prompts to return at a time."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPromptsResponseBody"
                }
              }
            }
          },
          "403": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Forbidden"
          },
          "422": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      },
      "post": {
        "tags": [
          "prompts"
        ],
        "summary": "Create a prompt version",
        "operationId": "postPromptVersion",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePromptRequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePromptResponseBody"
                }
              }
            }
          },
          "403": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Forbidden"
          },
          "422": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/v1/prompts/{prompt_identifier}/versions": {
      "get": {
        "tags": [
          "prompts"
        ],
        "summary": "List all prompt versions for a given prompt",
        "operationId": "listPromptVersions",
        "parameters": [
          {
            "name": "prompt_identifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the prompt, i.e. name or ID.",
              "title": "Prompt Identifier"
            },
            "description": "The identifier of the prompt, i.e. name or ID."
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Cursor for pagination (base64-encoded promptVersion ID)",
              "title": "Cursor"
            },
            "description": "Cursor for pagination (base64-encoded promptVersion ID)"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "exclusiveMinimum": 0,
              "description": "The max number of prompt versions to return at a time.",
              "default": 100,
              "title": "Limit"
            },
            "description": "The max number of prompt versions to return at a time."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPromptVersionsResponseBody"
                }
              }
            }
          },
          "403": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Forbidden"
          },
          "422": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/v1/prompt_versions/{prompt_version_id}": {
      "get": {
        "tags": [
          "prompts"
        ],
        "summary": "Get prompt by prompt version ID",
        "operationId": "getPromptVersionByPromptVersionId",
        "parameters": [
          {
            "name": "prompt_version_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the prompt version.",
              "title": "Prompt Version Id"
            },
            "description": "The ID of the prompt version."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPromptResponseBody"
                }
              }
            }
          },
          "403": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/v1/prompts/{prompt_identifier}/tags/{tag_name}": {
      "get": {
        "tags": [
          "prompts"
        ],
        "summary": "Get prompt by tag name",
        "operationId": "getPromptVersionByTagName",
        "parameters": [
          {
            "name": "prompt_identifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the prompt, i.e. name or ID.",
              "title": "Prompt Identifier"
            },
            "description": "The identifier of the prompt, i.e. name or ID."
          },
          {
            "name": "tag_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The tag of the prompt version",
              "title": "Tag Name"
            },
            "description": "The tag of the prompt version"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPromptResponseBody"
                }
              }
            }
          },
          "403": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/v1/prompts/{prompt_identifier}/latest": {
      "get": {
        "tags": [
          "prompts"
        ],
        "summary": "Get the latest prompt version",
        "operationId": "getPromptVersionLatest",
        "parameters": [
          {
            "name": "prompt_identifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the prompt, i.e. name or ID.",
              "title": "Prompt Identifier"
            },
            "description": "The identifier of the prompt, i.e. name or ID."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPromptResponseBody"
                }
              }
            }
          },
          "403": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AnnotateSpansRequestBody": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/SpanAnnotation"
            },
            "type": "array",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "AnnotateSpansRequestBody"
      },
      "AnnotateSpansResponseBody": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/InsertedSpanAnnotation"
            },
            "type": "array",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "AnnotateSpansResponseBody"
      },
      "AnnotationConfigResponse": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "annotation_type": {
            "$ref": "#/components/schemas/AnnotationType"
          },
          "optimization_direction": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OptimizationDirection"
              },
              {
                "type": "null"
              }
            ]
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "lower_bound": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lower Bound"
          },
          "upper_bound": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Upper Bound"
          },
          "values": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/CategoricalAnnotationValue"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Values"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "annotation_type"
        ],
        "title": "AnnotationConfigResponse"
      },
      "AnnotationType": {
        "type": "string",
        "enum": [
          "CONTINUOUS",
          "CATEGORICAL",
          "FREEFORM"
        ],
        "title": "AnnotationType"
      },
      "CategoricalAnnotationValue": {
        "properties": {
          "label": {
            "type": "string",
            "title": "Label"
          },
          "score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Score"
          }
        },
        "type": "object",
        "required": [
          "label"
        ],
        "title": "CategoricalAnnotationValue"
      },
      "CreateCategoricalAnnotationConfigPayload": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "optimization_direction": {
            "$ref": "#/components/schemas/OptimizationDirection"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "values": {
            "items": {
              "$ref": "#/components/schemas/CreateCategoricalAnnotationValuePayload"
            },
            "type": "array",
            "title": "Values"
          }
        },
        "type": "object",
        "required": [
          "name",
          "optimization_direction",
          "values"
        ],
        "title": "CreateCategoricalAnnotationConfigPayload"
      },
      "CreateCategoricalAnnotationValuePayload": {
        "properties": {
          "label": {
            "type": "string",
            "title": "Label"
          },
          "score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Score"
          }
        },
        "type": "object",
        "required": [
          "label"
        ],
        "title": "CreateCategoricalAnnotationValuePayload"
      },
      "CreateContinuousAnnotationConfigPayload": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "optimization_direction": {
            "$ref": "#/components/schemas/OptimizationDirection"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "lower_bound": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lower Bound"
          },
          "upper_bound": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Upper Bound"
          }
        },
        "type": "object",
        "required": [
          "name",
          "optimization_direction"
        ],
        "title": "CreateContinuousAnnotationConfigPayload"
      },
      "CreateExperimentRequestBody": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "Name of the experiment (if omitted, a random name will be generated)"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "An optional description of the experiment"
          },
          "metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata",
            "description": "Metadata for the experiment"
          },
          "version_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Version Id",
            "description": "ID of the dataset version over which the experiment will be run (if omitted, the latest version will be used)"
          },
          "repetitions": {
            "type": "integer",
            "title": "Repetitions",
            "description": "Number of times the experiment should be repeated for each example",
            "default": 1
          }
        },
        "type": "object",
        "title": "CreateExperimentRequestBody",
        "description": "Details of the experiment to be created"
      },
      "CreateExperimentResponseBody": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Experiment"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "CreateExperimentResponseBody"
      },
      "CreateFreeformAnnotationConfigPayload": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "CreateFreeformAnnotationConfigPayload"
      },
      "CreatePromptRequestBody": {
        "properties": {
          "prompt": {
            "$ref": "#/components/schemas/PromptData"
          },
          "version": {
            "$ref": "#/components/schemas/PromptVersionData"
          }
        },
        "type": "object",
        "required": [
          "prompt",
          "version"
        ],
        "title": "CreatePromptRequestBody"
      },
      "CreatePromptResponseBody": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PromptVersion"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "CreatePromptResponseBody"
      },
      "Dataset": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "metadata": {
            "type": "object",
            "title": "Metadata"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "description",
          "metadata",
          "created_at",
          "updated_at"
        ],
        "title": "Dataset"
      },
      "DatasetExample": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "input": {
            "type": "object",
            "title": "Input"
          },
          "output": {
            "type": "object",
            "title": "Output"
          },
          "metadata": {
            "type": "object",
            "title": "Metadata"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "input",
          "output",
          "metadata",
          "updated_at"
        ],
        "title": "DatasetExample"
      },
      "DatasetVersion": {
        "properties": {
          "version_id": {
            "type": "string",
            "title": "Version Id"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "metadata": {
            "type": "object",
            "title": "Metadata"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "version_id",
          "description",
          "metadata",
          "created_at"
        ],
        "title": "DatasetVersion"
      },
      "DatasetWithExampleCount": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "metadata": {
            "type": "object",
            "title": "Metadata"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "example_count": {
            "type": "integer",
            "title": "Example Count"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "description",
          "metadata",
          "created_at",
          "updated_at",
          "example_count"
        ],
        "title": "DatasetWithExampleCount"
      },
      "Experiment": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "The ID of the experiment"
          },
          "dataset_id": {
            "type": "string",
            "title": "Dataset Id",
            "description": "The ID of the dataset associated with the experiment"
          },
          "dataset_version_id": {
            "type": "string",
            "title": "Dataset Version Id",
            "description": "The ID of the dataset version associated with the experiment"
          },
          "repetitions": {
            "type": "integer",
            "title": "Repetitions",
            "description": "Number of times the experiment is repeated"
          },
          "metadata": {
            "type": "object",
            "title": "Metadata",
            "description": "Metadata of the experiment"
          },
          "project_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Project Name",
            "description": "The name of the project associated with the experiment"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "The creation timestamp of the experiment"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "description": "The last update timestamp of the experiment"
          }
        },
        "type": "object",
        "required": [
          "id",
          "dataset_id",
          "dataset_version_id",
          "repetitions",
          "metadata",
          "project_name",
          "created_at",
          "updated_at"
        ],
        "title": "Experiment"
      },
      "GetDatasetResponseBody": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/DatasetWithExampleCount"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "GetDatasetResponseBody"
      },
      "GetExperimentResponseBody": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Experiment"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "GetExperimentResponseBody"
      },
      "GetPromptResponseBody": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PromptVersion"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "GetPromptResponseBody"
      },
      "GetPromptVersionsResponseBody": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/PromptVersion"
            },
            "type": "array",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "GetPromptVersionsResponseBody"
      },
      "GetPromptsResponseBody": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/Prompt"
            },
            "type": "array",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "GetPromptsResponseBody"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "Identifier": {
        "type": "string",
        "pattern": "^[a-z0-9]([_a-z0-9-]*[a-z0-9])?$",
        "title": "Identifier"
      },
      "InsertedSpanAnnotation": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "The ID of the inserted span annotation"
          }
        },
        "type": "object",
        "required": [
          "id"
        ],
        "title": "InsertedSpanAnnotation"
      },
      "ListDatasetExamplesData": {
        "properties": {
          "dataset_id": {
            "type": "string",
            "title": "Dataset Id"
          },
          "version_id": {
            "type": "string",
            "title": "Version Id"
          },
          "examples": {
            "items": {
              "$ref": "#/components/schemas/DatasetExample"
            },
            "type": "array",
            "title": "Examples"
          }
        },
        "type": "object",
        "required": [
          "dataset_id",
          "version_id",
          "examples"
        ],
        "title": "ListDatasetExamplesData"
      },
      "ListDatasetExamplesResponseBody": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ListDatasetExamplesData"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "ListDatasetExamplesResponseBody"
      },
      "ListDatasetVersionsResponseBody": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/DatasetVersion"
            },
            "type": "array",
            "title": "Data"
          },
          "next_cursor": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Cursor"
          }
        },
        "type": "object",
        "required": [
          "data",
          "next_cursor"
        ],
        "title": "ListDatasetVersionsResponseBody"
      },
      "ListDatasetsResponseBody": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/Dataset"
            },
            "type": "array",
            "title": "Data"
          },
          "next_cursor": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Cursor"
          }
        },
        "type": "object",
        "required": [
          "data",
          "next_cursor"
        ],
        "title": "ListDatasetsResponseBody"
      },
      "ListExperimentsResponseBody": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/Experiment"
            },
            "type": "array",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "ListExperimentsResponseBody"
      },
      "ModelProvider": {
        "type": "string",
        "enum": [
          "OPENAI",
          "AZURE_OPENAI",
          "ANTHROPIC",
          "GOOGLE"
        ],
        "title": "ModelProvider"
      },
      "OptimizationDirection": {
        "type": "string",
        "enum": [
          "MINIMIZE",
          "MAXIMIZE"
        ],
        "title": "OptimizationDirection"
      },
      "Prompt": {
        "properties": {
          "name": {
            "$ref": "#/components/schemas/Identifier"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "source_prompt_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Prompt Id"
          },
          "id": {
            "type": "string",
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "name",
          "id"
        ],
        "title": "Prompt"
      },
      "PromptAnthropicInvocationParameters": {
        "properties": {
          "type": {
            "type": "string",
            "const": "anthropic",
            "title": "Type"
          },
          "anthropic": {
            "$ref": "#/components/schemas/PromptAnthropicInvocationParametersContent"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "type",
          "anthropic"
        ],
        "title": "PromptAnthropicInvocationParameters"
      },
      "PromptAnthropicInvocationParametersContent": {
        "properties": {
          "max_tokens": {
            "type": "integer",
            "title": "Max Tokens"
          },
          "temperature": {
            "type": "number",
            "title": "Temperature"
          },
          "top_p": {
            "type": "number",
            "title": "Top P"
          },
          "stop_sequences": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Stop Sequences"
          },
          "thinking": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PromptAnthropicThinkingConfigDisabled"
              },
              {
                "$ref": "#/components/schemas/PromptAnthropicThinkingConfigEnabled"
              }
            ],
            "title": "Thinking",
            "discriminator": {
              "propertyName": "type",
              "mapping": {
                "disabled": "#/components/schemas/PromptAnthropicThinkingConfigDisabled",
                "enabled": "#/components/schemas/PromptAnthropicThinkingConfigEnabled"
              }
            }
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "max_tokens"
        ],
        "title": "PromptAnthropicInvocationParametersContent"
      },
      "PromptAnthropicThinkingConfigDisabled": {
        "properties": {
          "type": {
            "type": "string",
            "const": "disabled",
            "title": "Type"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "type"
        ],
        "title": "PromptAnthropicThinkingConfigDisabled"
      },
      "PromptAnthropicThinkingConfigEnabled": {
        "properties": {
          "type": {
            "type": "string",
            "const": "enabled",
            "title": "Type"
          },
          "budget_tokens": {
            "type": "integer",
            "minimum": 1024.0,
            "title": "Budget Tokens"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "type",
          "budget_tokens"
        ],
        "title": "PromptAnthropicThinkingConfigEnabled"
      },
      "PromptAzureOpenAIInvocationParameters": {
        "properties": {
          "type": {
            "type": "string",
            "const": "azure_openai",
            "title": "Type"
          },
          "azure_openai": {
            "$ref": "#/components/schemas/PromptAzureOpenAIInvocationParametersContent"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "type",
          "azure_openai"
        ],
        "title": "PromptAzureOpenAIInvocationParameters"
      },
      "PromptAzureOpenAIInvocationParametersContent": {
        "properties": {
          "temperature": {
            "type": "number",
            "title": "Temperature"
          },
          "max_tokens": {
            "type": "integer",
            "title": "Max Tokens"
          },
          "max_completion_tokens": {
            "type": "integer",
            "title": "Max Completion Tokens"
          },
          "frequency_penalty": {
            "type": "number",
            "title": "Frequency Penalty"
          },
          "presence_penalty": {
            "type": "number",
            "title": "Presence Penalty"
          },
          "top_p": {
            "type": "number",
            "title": "Top P"
          },
          "seed": {
            "type": "integer",
            "title": "Seed"
          },
          "reasoning_effort": {
            "type": "string",
            "enum": [
              "low",
              "medium",
              "high"
            ],
            "title": "Reasoning Effort"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "PromptAzureOpenAIInvocationParametersContent"
      },
      "PromptChatTemplate": {
        "properties": {
          "type": {
            "type": "string",
            "const": "chat",
            "title": "Type"
          },
          "messages": {
            "items": {
              "$ref": "#/components/schemas/PromptMessage"
            },
            "type": "array",
            "title": "Messages"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "type",
          "messages"
        ],
        "title": "PromptChatTemplate"
      },
      "PromptData": {
        "properties": {
          "name": {
            "$ref": "#/components/schemas/Identifier"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "source_prompt_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Prompt Id"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "PromptData"
      },
      "PromptGoogleInvocationParameters": {
        "properties": {
          "type": {
            "type": "string",
            "const": "google",
            "title": "Type"
          },
          "google": {
            "$ref": "#/components/schemas/PromptGoogleInvocationParametersContent"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "type",
          "google"
        ],
        "title": "PromptGoogleInvocationParameters"
      },
      "PromptGoogleInvocationParametersContent": {
        "properties": {
          "temperature": {
            "type": "number",
            "title": "Temperature"
          },
          "max_output_tokens": {
            "type": "integer",
            "title": "Max Output Tokens"
          },
          "stop_sequences": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Stop Sequences"
          },
          "presence_penalty": {
            "type": "number",
            "title": "Presence Penalty"
          },
          "frequency_penalty": {
            "type": "number",
            "title": "Frequency Penalty"
          },
          "top_p": {
            "type": "number",
            "title": "Top P"
          },
          "top_k": {
            "type": "integer",
            "title": "Top K"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "PromptGoogleInvocationParametersContent"
      },
      "PromptMessage": {
        "properties": {
          "role": {
            "type": "string",
            "enum": [
              "user",
              "assistant",
              "model",
              "ai",
              "tool",
              "system",
              "developer"
            ],
            "title": "Role"
          },
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TextContentPart"
                    },
                    {
                      "$ref": "#/components/schemas/ToolCallContentPart"
                    },
                    {
                      "$ref": "#/components/schemas/ToolResultContentPart"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "text": "#/components/schemas/TextContentPart",
                      "tool_call": "#/components/schemas/ToolCallContentPart",
                      "tool_result": "#/components/schemas/ToolResultContentPart"
                    }
                  }
                },
                "type": "array",
                "minItems": 1
              }
            ],
            "title": "Content"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "role",
          "content"
        ],
        "title": "PromptMessage"
      },
      "PromptOpenAIInvocationParameters": {
        "properties": {
          "type": {
            "type": "string",
            "const": "openai",
            "title": "Type"
          },
          "openai": {
            "$ref": "#/components/schemas/PromptOpenAIInvocationParametersContent"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "type",
          "openai"
        ],
        "title": "PromptOpenAIInvocationParameters"
      },
      "PromptOpenAIInvocationParametersContent": {
        "properties": {
          "temperature": {
            "type": "number",
            "title": "Temperature"
          },
          "max_tokens": {
            "type": "integer",
            "title": "Max Tokens"
          },
          "max_completion_tokens": {
            "type": "integer",
            "title": "Max Completion Tokens"
          },
          "frequency_penalty": {
            "type": "number",
            "title": "Frequency Penalty"
          },
          "presence_penalty": {
            "type": "number",
            "title": "Presence Penalty"
          },
          "top_p": {
            "type": "number",
            "title": "Top P"
          },
          "seed": {
            "type": "integer",
            "title": "Seed"
          },
          "reasoning_effort": {
            "type": "string",
            "enum": [
              "low",
              "medium",
              "high"
            ],
            "title": "Reasoning Effort"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "PromptOpenAIInvocationParametersContent"
      },
      "PromptResponseFormatJSONSchema": {
        "properties": {
          "type": {
            "type": "string",
            "const": "json_schema",
            "title": "Type"
          },
          "json_schema": {
            "$ref": "#/components/schemas/PromptResponseFormatJSONSchemaDefinition"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "type",
          "json_schema"
        ],
        "title": "PromptResponseFormatJSONSchema"
      },
      "PromptResponseFormatJSONSchemaDefinition": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "schema": {
            "type": "object",
            "title": "Schema"
          },
          "strict": {
            "type": "boolean",
            "title": "Strict"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "name"
        ],
        "title": "PromptResponseFormatJSONSchemaDefinition"
      },
      "PromptStringTemplate": {
        "properties": {
          "type": {
            "type": "string",
            "const": "string",
            "title": "Type"
          },
          "template": {
            "type": "string",
            "title": "Template"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "type",
          "template"
        ],
        "title": "PromptStringTemplate"
      },
      "PromptTemplateFormat": {
        "type": "string",
        "enum": [
          "MUSTACHE",
          "F_STRING",
          "NONE"
        ],
        "title": "PromptTemplateFormat"
      },
      "PromptTemplateType": {
        "type": "string",
        "enum": [
          "STR",
          "CHAT"
        ],
        "title": "PromptTemplateType"
      },
      "PromptToolChoiceNone": {
        "properties": {
          "type": {
            "type": "string",
            "const": "none",
            "title": "Type"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "type"
        ],
        "title": "PromptToolChoiceNone"
      },
      "PromptToolChoiceOneOrMore": {
        "properties": {
          "type": {
            "type": "string",
            "const": "one_or_more",
            "title": "Type"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "type"
        ],
        "title": "PromptToolChoiceOneOrMore"
      },
      "PromptToolChoiceSpecificFunctionTool": {
        "properties": {
          "type": {
            "type": "string",
            "const": "specific_function",
            "title": "Type"
          },
          "function_name": {
            "type": "string",
            "title": "Function Name"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "type",
          "function_name"
        ],
        "title": "PromptToolChoiceSpecificFunctionTool"
      },
      "PromptToolChoiceZeroOrMore": {
        "properties": {
          "type": {
            "type": "string",
            "const": "zero_or_more",
            "title": "Type"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "type"
        ],
        "title": "PromptToolChoiceZeroOrMore"
      },
      "PromptToolFunction": {
        "properties": {
          "type": {
            "type": "string",
            "const": "function",
            "title": "Type"
          },
          "function": {
            "$ref": "#/components/schemas/PromptToolFunctionDefinition"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "type",
          "function"
        ],
        "title": "PromptToolFunction"
      },
      "PromptToolFunctionDefinition": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "parameters": {
            "type": "object",
            "title": "Parameters"
          },
          "strict": {
            "type": "boolean",
            "title": "Strict"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "name"
        ],
        "title": "PromptToolFunctionDefinition"
      },
      "PromptTools": {
        "properties": {
          "type": {
            "type": "string",
            "const": "tools",
            "title": "Type"
          },
          "tools": {
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PromptToolFunction"
                }
              ],
              "discriminator": {
                "propertyName": "type",
                "mapping": {
                  "function": "#/components/schemas/PromptToolFunction"
                }
              }
            },
            "type": "array",
            "minItems": 1,
            "title": "Tools"
          },
          "tool_choice": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PromptToolChoiceNone"
              },
              {
                "$ref": "#/components/schemas/PromptToolChoiceZeroOrMore"
              },
              {
                "$ref": "#/components/schemas/PromptToolChoiceOneOrMore"
              },
              {
                "$ref": "#/components/schemas/PromptToolChoiceSpecificFunctionTool"
              }
            ],
            "title": "Tool Choice",
            "discriminator": {
              "propertyName": "type",
              "mapping": {
                "none": "#/components/schemas/PromptToolChoiceNone",
                "one_or_more": "#/components/schemas/PromptToolChoiceOneOrMore",
                "specific_function": "#/components/schemas/PromptToolChoiceSpecificFunctionTool",
                "zero_or_more": "#/components/schemas/PromptToolChoiceZeroOrMore"
              }
            }
          },
          "disable_parallel_tool_calls": {
            "type": "boolean",
            "title": "Disable Parallel Tool Calls"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "type",
          "tools"
        ],
        "title": "PromptTools"
      },
      "PromptVersion": {
        "properties": {
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "model_provider": {
            "$ref": "#/components/schemas/ModelProvider"
          },
          "model_name": {
            "type": "string",
            "title": "Model Name"
          },
          "template": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PromptChatTemplate"
              },
              {
                "$ref": "#/components/schemas/PromptStringTemplate"
              }
            ],
            "title": "Template",
            "discriminator": {
              "propertyName": "type",
              "mapping": {
                "chat": "#/components/schemas/PromptChatTemplate",
                "string": "#/components/schemas/PromptStringTemplate"
              }
            }
          },
          "template_type": {
            "$ref": "#/components/schemas/PromptTemplateType"
          },
          "template_format": {
            "$ref": "#/components/schemas/PromptTemplateFormat"
          },
          "invocation_parameters": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PromptOpenAIInvocationParameters"
              },
              {
                "$ref": "#/components/schemas/PromptAzureOpenAIInvocationParameters"
              },
              {
                "$ref": "#/components/schemas/PromptAnthropicInvocationParameters"
              },
              {
                "$ref": "#/components/schemas/PromptGoogleInvocationParameters"
              }
            ],
            "title": "Invocation Parameters",
            "discriminator": {
              "propertyName": "type",
              "mapping": {
                "anthropic": "#/components/schemas/PromptAnthropicInvocationParameters",
                "azure_openai": "#/components/schemas/PromptAzureOpenAIInvocationParameters",
                "google": "#/components/schemas/PromptGoogleInvocationParameters",
                "openai": "#/components/schemas/PromptOpenAIInvocationParameters"
              }
            }
          },
          "tools": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PromptTools"
              },
              {
                "type": "null"
              }
            ]
          },
          "response_format": {
            "anyOf": [
              {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/PromptResponseFormatJSONSchema"
                  }
                ],
                "discriminator": {
                  "propertyName": "type",
                  "mapping": {
                    "json_schema": "#/components/schemas/PromptResponseFormatJSONSchema"
                  }
                }
              },
              {
                "type": "null"
              }
            ],
            "title": "Response Format"
          },
          "id": {
            "type": "string",
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "model_provider",
          "model_name",
          "template",
          "template_type",
          "template_format",
          "invocation_parameters",
          "id"
        ],
        "title": "PromptVersion"
      },
      "PromptVersionData": {
        "properties": {
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "model_provider": {
            "$ref": "#/components/schemas/ModelProvider"
          },
          "model_name": {
            "type": "string",
            "title": "Model Name"
          },
          "template": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PromptChatTemplate"
              },
              {
                "$ref": "#/components/schemas/PromptStringTemplate"
              }
            ],
            "title": "Template",
            "discriminator": {
              "propertyName": "type",
              "mapping": {
                "chat": "#/components/schemas/PromptChatTemplate",
                "string": "#/components/schemas/PromptStringTemplate"
              }
            }
          },
          "template_type": {
            "$ref": "#/components/schemas/PromptTemplateType"
          },
          "template_format": {
            "$ref": "#/components/schemas/PromptTemplateFormat"
          },
          "invocation_parameters": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PromptOpenAIInvocationParameters"
              },
              {
                "$ref": "#/components/schemas/PromptAzureOpenAIInvocationParameters"
              },
              {
                "$ref": "#/components/schemas/PromptAnthropicInvocationParameters"
              },
              {
                "$ref": "#/components/schemas/PromptGoogleInvocationParameters"
              }
            ],
            "title": "Invocation Parameters",
            "discriminator": {
              "propertyName": "type",
              "mapping": {
                "anthropic": "#/components/schemas/PromptAnthropicInvocationParameters",
                "azure_openai": "#/components/schemas/PromptAzureOpenAIInvocationParameters",
                "google": "#/components/schemas/PromptGoogleInvocationParameters",
                "openai": "#/components/schemas/PromptOpenAIInvocationParameters"
              }
            }
          },
          "tools": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PromptTools"
              },
              {
                "type": "null"
              }
            ]
          },
          "response_format": {
            "anyOf": [
              {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/PromptResponseFormatJSONSchema"
                  }
                ],
                "discriminator": {
                  "propertyName": "type",
                  "mapping": {
                    "json_schema": "#/components/schemas/PromptResponseFormatJSONSchema"
                  }
                }
              },
              {
                "type": "null"
              }
            ],
            "title": "Response Format"
          }
        },
        "type": "object",
        "required": [
          "model_provider",
          "model_name",
          "template",
          "template_type",
          "template_format",
          "invocation_parameters"
        ],
        "title": "PromptVersionData"
      },
      "SpanAnnotation": {
        "properties": {
          "span_id": {
            "type": "string",
            "title": "Span Id",
            "description": "OpenTelemetry Span ID (hex format w/o 0x prefix)"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the annotation"
          },
          "annotator_kind": {
            "type": "string",
            "enum": [
              "LLM",
              "HUMAN"
            ],
            "title": "Annotator Kind",
            "description": "The kind of annotator used for the annotation"
          },
          "result": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SpanAnnotationResult"
              },
              {
                "type": "null"
              }
            ],
            "description": "The result of the annotation"
          },
          "metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata",
            "description": "Metadata for the annotation"
          },
          "identifier": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Identifier",
            "description": "The identifier of the annotation. If provided, the annotation will be updated if it already exists."
          }
        },
        "type": "object",
        "required": [
          "span_id",
          "name",
          "annotator_kind"
        ],
        "title": "SpanAnnotation"
      },
      "SpanAnnotationResult": {
        "properties": {
          "label": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Label",
            "description": "The label assigned by the annotation"
          },
          "score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Score",
            "description": "The score assigned by the annotation"
          },
          "explanation": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Explanation",
            "description": "Explanation of the annotation result"
          }
        },
        "type": "object",
        "title": "SpanAnnotationResult"
      },
      "TextContentPart": {
        "properties": {
          "type": {
            "type": "string",
            "const": "text",
            "title": "Type"
          },
          "text": {
            "type": "string",
            "title": "Text"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "type",
          "text"
        ],
        "title": "TextContentPart"
      },
      "ToolCallContentPart": {
        "properties": {
          "type": {
            "type": "string",
            "const": "tool_call",
            "title": "Type"
          },
          "tool_call_id": {
            "type": "string",
            "title": "Tool Call Id"
          },
          "tool_call": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ToolCallFunction"
              }
            ],
            "title": "Tool Call",
            "discriminator": {
              "propertyName": "type",
              "mapping": {
                "function": "#/components/schemas/ToolCallFunction"
              }
            }
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "type",
          "tool_call_id",
          "tool_call"
        ],
        "title": "ToolCallContentPart"
      },
      "ToolCallFunction": {
        "properties": {
          "type": {
            "type": "string",
            "const": "function",
            "title": "Type"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "arguments": {
            "type": "string",
            "title": "Arguments"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "type",
          "name",
          "arguments"
        ],
        "title": "ToolCallFunction"
      },
      "ToolResultContentPart": {
        "properties": {
          "type": {
            "type": "string",
            "const": "tool_result",
            "title": "Type"
          },
          "tool_call_id": {
            "type": "string",
            "title": "Tool Call Id"
          },
          "tool_result": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "integer"
              },
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "object"
              },
              {
                "items": {},
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tool Result"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "type",
          "tool_call_id",
          "tool_result"
        ],
        "title": "ToolResultContentPart"
      },
      "UploadDatasetData": {
        "properties": {
          "dataset_id": {
            "type": "string",
            "title": "Dataset Id"
          }
        },
        "type": "object",
        "required": [
          "dataset_id"
        ],
        "title": "UploadDatasetData"
      },
      "UploadDatasetResponseBody": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/UploadDatasetData"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "UploadDatasetResponseBody"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    }
  }
}