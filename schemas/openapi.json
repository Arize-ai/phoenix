{
  "openapi": "3.1.0",
  "info": {
    "title": "Arize-Phoenix REST API",
    "description": "Schema for Arize-Phoenix REST API",
    "version": "1.0"
  },
  "paths": {
    "/v1/datasets": {
      "get": {
        "tags": [
          "datasets"
        ],
        "summary": "List datasets",
        "operationId": "listDatasets",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Cursor for pagination",
              "title": "Cursor"
            },
            "description": "Cursor for pagination"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "An optional dataset name to filter by",
              "title": "Name"
            },
            "description": "An optional dataset name to filter by"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "exclusiveMinimum": 0,
              "description": "The max number of datasets to return at a time.",
              "default": 10,
              "title": "Limit"
            },
            "description": "The max number of datasets to return at a time."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListDatasetsResponseBody"
                }
              }
            }
          },
          "403": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Forbidden"
          },
          "422": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/v1/datasets/{id}": {
      "delete": {
        "tags": [
          "datasets"
        ],
        "summary": "Delete dataset by ID",
        "operationId": "deleteDatasetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the dataset to delete.",
              "title": "Id"
            },
            "description": "The ID of the dataset to delete."
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "403": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Dataset not found"
          },
          "422": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Invalid dataset ID"
          }
        }
      },
      "get": {
        "tags": [
          "datasets"
        ],
        "summary": "Get dataset by ID",
        "operationId": "getDataset",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the dataset",
              "title": "Id"
            },
            "description": "The ID of the dataset"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDatasetResponseBody"
                }
              }
            }
          },
          "403": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/datasets/{id}/versions": {
      "get": {
        "tags": [
          "datasets"
        ],
        "summary": "List dataset versions",
        "operationId": "listDatasetVersionsByDatasetId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the dataset",
              "title": "Id"
            },
            "description": "The ID of the dataset"
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Cursor for pagination",
              "title": "Cursor"
            },
            "description": "Cursor for pagination"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "exclusiveMinimum": 0,
              "description": "The max number of dataset versions to return at a time",
              "default": 10,
              "title": "Limit"
            },
            "description": "The max number of dataset versions to return at a time"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListDatasetVersionsResponseBody"
                }
              }
            }
          },
          "403": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Forbidden"
          },
          "422": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/v1/datasets/upload": {
      "post": {
        "tags": [
          "datasets"
        ],
        "summary": "Upload dataset from JSON, CSV, or PyArrow",
        "operationId": "uploadDataset",
        "parameters": [
          {
            "name": "sync",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "If true, fulfill request synchronously and return JSON containing dataset_id.",
              "default": false,
              "title": "Sync"
            },
            "description": "If true, fulfill request synchronously and return JSON containing dataset_id."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/UploadDatasetResponseBody"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Response Uploaddataset"
                }
              }
            }
          },
          "403": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Forbidden"
          },
          "409": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Dataset of the same name already exists"
          },
          "422": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Invalid request body"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "inputs"
                ],
                "properties": {
                  "action": {
                    "type": "string",
                    "enum": [
                      "create",
                      "append"
                    ]
                  },
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "inputs": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    }
                  },
                  "outputs": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    }
                  },
                  "metadata": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    }
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "input_keys[]",
                  "output_keys[]",
                  "file"
                ],
                "properties": {
                  "action": {
                    "type": "string",
                    "enum": [
                      "create",
                      "append"
                    ]
                  },
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "input_keys[]": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "uniqueItems": true
                  },
                  "output_keys[]": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "uniqueItems": true
                  },
                  "metadata_keys[]": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "uniqueItems": true
                  },
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/datasets/{id}/examples": {
      "get": {
        "tags": [
          "datasets"
        ],
        "summary": "Get examples from a dataset",
        "operationId": "getDatasetExamples",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the dataset",
              "title": "Id"
            },
            "description": "The ID of the dataset"
          },
          {
            "name": "version_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "The ID of the dataset version (if omitted, returns data from the latest version)",
              "title": "Version Id"
            },
            "description": "The ID of the dataset version (if omitted, returns data from the latest version)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListDatasetExamplesResponseBody"
                }
              }
            }
          },
          "403": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/datasets/{id}/csv": {
      "get": {
        "tags": [
          "datasets"
        ],
        "summary": "Download dataset examples as CSV file",
        "operationId": "getDatasetCsv",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the dataset",
              "title": "Id"
            },
            "description": "The ID of the dataset"
          },
          {
            "name": "version_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "The ID of the dataset version (if omitted, returns data from the latest version)",
              "title": "Version Id"
            },
            "description": "The ID of the dataset version (if omitted, returns data from the latest version)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "text/csv": {
                "schema": {
                  "type": "string",
                  "contentMediaType": "text/csv"
                }
              }
            }
          },
          "403": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Forbidden"
          },
          "422": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/v1/datasets/{id}/jsonl/openai_ft": {
      "get": {
        "tags": [
          "datasets"
        ],
        "summary": "Download dataset examples as OpenAI fine-tuning JSONL file",
        "operationId": "getDatasetJSONLOpenAIFineTuning",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the dataset",
              "title": "Id"
            },
            "description": "The ID of the dataset"
          },
          {
            "name": "version_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "The ID of the dataset version (if omitted, returns data from the latest version)",
              "title": "Version Id"
            },
            "description": "The ID of the dataset version (if omitted, returns data from the latest version)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Forbidden"
          },
          "422": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Invalid dataset or version ID"
          }
        }
      }
    },
    "/v1/datasets/{id}/jsonl/openai_evals": {
      "get": {
        "tags": [
          "datasets"
        ],
        "summary": "Download dataset examples as OpenAI evals JSONL file",
        "operationId": "getDatasetJSONLOpenAIEvals",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the dataset",
              "title": "Id"
            },
            "description": "The ID of the dataset"
          },
          {
            "name": "version_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "The ID of the dataset version (if omitted, returns data from the latest version)",
              "title": "Version Id"
            },
            "description": "The ID of the dataset version (if omitted, returns data from the latest version)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Forbidden"
          },
          "422": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Invalid dataset or version ID"
          }
        }
      }
    },
    "/v1/datasets/{dataset_id}/experiments": {
      "post": {
        "tags": [
          "experiments"
        ],
        "summary": "Create experiment on a dataset",
        "operationId": "createExperiment",
        "parameters": [
          {
            "name": "dataset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Dataset ID"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateExperimentRequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Experiment retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateExperimentResponseBody"
                }
              }
            }
          },
          "403": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Dataset or DatasetVersion not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "experiments"
        ],
        "summary": "List experiments by dataset",
        "operationId": "listExperiments",
        "parameters": [
          {
            "name": "dataset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Dataset ID"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Experiments retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListExperimentsResponseBody"
                }
              }
            }
          },
          "403": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Forbidden"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/experiments/{experiment_id}": {
      "get": {
        "tags": [
          "experiments"
        ],
        "summary": "Get experiment by ID",
        "operationId": "getExperiment",
        "parameters": [
          {
            "name": "experiment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Experiment Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Experiment retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetExperimentResponseBody"
                }
              }
            }
          },
          "403": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Experiment not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/span_annotations": {
      "post": {
        "tags": [
          "spans"
        ],
        "summary": "Create or update span annotations",
        "operationId": "annotateSpans",
        "parameters": [
          {
            "name": "sync",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "If true, fulfill request synchronously.",
              "default": false,
              "title": "Sync"
            },
            "description": "If true, fulfill request synchronously."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnnotateSpansRequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Span annotations inserted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotateSpansResponseBody"
                }
              }
            }
          },
          "403": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Span not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/evaluations": {
      "post": {
        "tags": [
          "traces"
        ],
        "summary": "Add span, trace, or document evaluations",
        "operationId": "addEvaluations",
        "parameters": [
          {
            "name": "content-type",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Content-Type"
            }
          },
          {
            "name": "content-encoding",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Content-Encoding"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "403": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Forbidden"
          },
          "415": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Unsupported content type, only gzipped protobuf and pandas-arrow are supported"
          },
          "422": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/x-protobuf": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            },
            "application/x-pandas-arrow": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "traces"
        ],
        "summary": "Get span, trace, or document evaluations from a project",
        "operationId": "getEvaluations",
        "parameters": [
          {
            "name": "project_name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "The name of the project to get evaluations from (if omitted, evaluations will be drawn from the `default` project)",
              "title": "Project Name"
            },
            "description": "The name of the project to get evaluations from (if omitted, evaluations will be drawn from the `default` project)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "403": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AnnotateSpansRequestBody": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/SpanAnnotation"
            },
            "type": "array",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "AnnotateSpansRequestBody"
      },
      "AnnotateSpansResponseBody": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/InsertedSpanAnnotation"
            },
            "type": "array",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "AnnotateSpansResponseBody"
      },
      "CreateExperimentRequestBody": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "Name of the experiment (if omitted, a random name will be generated)"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "An optional description of the experiment"
          },
          "metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata",
            "description": "Metadata for the experiment"
          },
          "version_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Version Id",
            "description": "ID of the dataset version over which the experiment will be run (if omitted, the latest version will be used)"
          },
          "repetitions": {
            "type": "integer",
            "title": "Repetitions",
            "description": "Number of times the experiment should be repeated for each example",
            "default": 1
          }
        },
        "type": "object",
        "title": "CreateExperimentRequestBody",
        "description": "Details of the experiment to be created"
      },
      "CreateExperimentResponseBody": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Experiment"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "CreateExperimentResponseBody"
      },
      "Dataset": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "metadata": {
            "type": "object",
            "title": "Metadata"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "description",
          "metadata",
          "created_at",
          "updated_at"
        ],
        "title": "Dataset"
      },
      "DatasetExample": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "input": {
            "type": "object",
            "title": "Input"
          },
          "output": {
            "type": "object",
            "title": "Output"
          },
          "metadata": {
            "type": "object",
            "title": "Metadata"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "input",
          "output",
          "metadata",
          "updated_at"
        ],
        "title": "DatasetExample"
      },
      "DatasetVersion": {
        "properties": {
          "version_id": {
            "type": "string",
            "title": "Version Id"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "metadata": {
            "type": "object",
            "title": "Metadata"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "version_id",
          "description",
          "metadata",
          "created_at"
        ],
        "title": "DatasetVersion"
      },
      "DatasetWithExampleCount": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "metadata": {
            "type": "object",
            "title": "Metadata"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "example_count": {
            "type": "integer",
            "title": "Example Count"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "description",
          "metadata",
          "created_at",
          "updated_at",
          "example_count"
        ],
        "title": "DatasetWithExampleCount"
      },
      "Experiment": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "The ID of the experiment"
          },
          "dataset_id": {
            "type": "string",
            "title": "Dataset Id",
            "description": "The ID of the dataset associated with the experiment"
          },
          "dataset_version_id": {
            "type": "string",
            "title": "Dataset Version Id",
            "description": "The ID of the dataset version associated with the experiment"
          },
          "repetitions": {
            "type": "integer",
            "title": "Repetitions",
            "description": "Number of times the experiment is repeated"
          },
          "metadata": {
            "type": "object",
            "title": "Metadata",
            "description": "Metadata of the experiment"
          },
          "project_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Project Name",
            "description": "The name of the project associated with the experiment"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "The creation timestamp of the experiment"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "description": "The last update timestamp of the experiment"
          }
        },
        "type": "object",
        "required": [
          "id",
          "dataset_id",
          "dataset_version_id",
          "repetitions",
          "metadata",
          "project_name",
          "created_at",
          "updated_at"
        ],
        "title": "Experiment"
      },
      "GetDatasetResponseBody": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/DatasetWithExampleCount"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "GetDatasetResponseBody"
      },
      "GetExperimentResponseBody": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Experiment"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "GetExperimentResponseBody"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "InsertedSpanAnnotation": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "The ID of the inserted span annotation"
          }
        },
        "type": "object",
        "required": [
          "id"
        ],
        "title": "InsertedSpanAnnotation"
      },
      "ListDatasetExamplesData": {
        "properties": {
          "dataset_id": {
            "type": "string",
            "title": "Dataset Id"
          },
          "version_id": {
            "type": "string",
            "title": "Version Id"
          },
          "examples": {
            "items": {
              "$ref": "#/components/schemas/DatasetExample"
            },
            "type": "array",
            "title": "Examples"
          }
        },
        "type": "object",
        "required": [
          "dataset_id",
          "version_id",
          "examples"
        ],
        "title": "ListDatasetExamplesData"
      },
      "ListDatasetExamplesResponseBody": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ListDatasetExamplesData"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "ListDatasetExamplesResponseBody"
      },
      "ListDatasetVersionsResponseBody": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/DatasetVersion"
            },
            "type": "array",
            "title": "Data"
          },
          "next_cursor": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Cursor"
          }
        },
        "type": "object",
        "required": [
          "data",
          "next_cursor"
        ],
        "title": "ListDatasetVersionsResponseBody"
      },
      "ListDatasetsResponseBody": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/Dataset"
            },
            "type": "array",
            "title": "Data"
          },
          "next_cursor": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Cursor"
          }
        },
        "type": "object",
        "required": [
          "data",
          "next_cursor"
        ],
        "title": "ListDatasetsResponseBody"
      },
      "ListExperimentsResponseBody": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/Experiment"
            },
            "type": "array",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "ListExperimentsResponseBody"
      },
      "SpanAnnotation": {
        "properties": {
          "span_id": {
            "type": "string",
            "title": "Span Id",
            "description": "OpenTelemetry Span ID (hex format w/o 0x prefix)"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the annotation"
          },
          "annotator_kind": {
            "type": "string",
            "enum": [
              "LLM",
              "HUMAN"
            ],
            "title": "Annotator Kind",
            "description": "The kind of annotator used for the annotation"
          },
          "result": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SpanAnnotationResult"
              },
              {
                "type": "null"
              }
            ],
            "description": "The result of the annotation"
          },
          "metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata",
            "description": "Metadata for the annotation"
          }
        },
        "type": "object",
        "required": [
          "span_id",
          "name",
          "annotator_kind"
        ],
        "title": "SpanAnnotation"
      },
      "SpanAnnotationResult": {
        "properties": {
          "label": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Label",
            "description": "The label assigned by the annotation"
          },
          "score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Score",
            "description": "The score assigned by the annotation"
          },
          "explanation": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Explanation",
            "description": "Explanation of the annotation result"
          }
        },
        "type": "object",
        "title": "SpanAnnotationResult"
      },
      "UploadDatasetData": {
        "properties": {
          "dataset_id": {
            "type": "string",
            "title": "Dataset Id"
          }
        },
        "type": "object",
        "required": [
          "dataset_id"
        ],
        "title": "UploadDatasetData"
      },
      "UploadDatasetResponseBody": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/UploadDatasetData"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "UploadDatasetResponseBody"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    }
  }
}