{
  "openapi": "3.1.0",
  "info": {
    "title": "Arize-Phoenix API",
    "description": "Schema for Arize-Phoenix REST API",
    "version": "4.10.1"
  },
  "paths": {
    "/v1/datasets/{id}/examples": {
      "get": {
        "tags": [
          "datasets"
        ],
        "summary": "Get dataset examples by dataset ID.",
        "operationId": "getDatasetExamples",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the dataset.",
              "title": "Id"
            },
            "description": "The ID of the dataset."
          },
          {
            "name": "version_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "If provided, returns the dataset examples as of the specified version.",
              "title": "Version Id"
            },
            "description": "If provided, returns the dataset examples as of the specified version."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListDatasetExamplesResponseBody"
                }
              }
            }
          },
          "403": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/datasets": {
      "get": {
        "tags": [
          "datasets"
        ],
        "summary": "Returns paginated lists of datasets.",
        "operationId": "listDatasets",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "If provided, returns datasets starting with the provided cursor.",
              "title": "Cursor"
            },
            "description": "If provided, returns datasets starting with the provided cursor."
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "If provided, filters the returned datasets by name.",
              "title": "Name"
            },
            "description": "If provided, filters the returned datasets by name."
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "exclusiveMinimum": 0,
              "description": "The maximum number of datasets to return at a time.",
              "default": 10,
              "title": "Limit"
            },
            "description": "The maximum number of datasets to return at a time."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListDatasetsResponseBody"
                }
              }
            }
          },
          "403": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Forbidden"
          },
          "422": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/v1/datasets/{id}": {
      "delete": {
        "tags": [
          "datasets"
        ],
        "summary": "Delete dataset by ID",
        "operationId": "deleteDatasetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the dataset to delete.",
              "title": "Id"
            },
            "description": "The ID of the dataset to delete."
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "403": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      },
      "get": {
        "tags": [
          "datasets"
        ],
        "summary": "Gets a dataset by ID.",
        "operationId": "getDataset",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the dataset.",
              "title": "Id"
            },
            "description": "The ID of the dataset."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDatasetResponseBody"
                }
              }
            }
          },
          "403": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/datasets/{id}/versions": {
      "get": {
        "tags": [
          "datasets"
        ],
        "summary": "Lists dataset versions (sorted from latest to oldest).",
        "operationId": "listDatasetVersionsByDatasetId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the dataset.",
              "title": "Id"
            },
            "description": "The ID of the dataset."
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "If provided, returns dataset versions starting with the provided cursor.",
              "title": "Cursor"
            },
            "description": "If provided, returns dataset versions starting with the provided cursor."
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "exclusiveMinimum": 0,
              "description": "The maximum number of dataset versions to return at a time.",
              "default": 10,
              "title": "Limit"
            },
            "description": "The maximum number of dataset versions to return at a time."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListDatasetVersionsResponseBody"
                }
              }
            }
          },
          "403": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Forbidden"
          },
          "422": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/v1/datasets/upload": {
      "post": {
        "tags": [
          "datasets"
        ],
        "summary": "Upload dataset as either JSON or file (CSV or PyArrow)",
        "operationId": "uploadDataset",
        "parameters": [
          {
            "name": "sync",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "If true, fulfill request synchronously and return JSON containing dataset_id.",
              "default": false,
              "title": "Sync"
            },
            "description": "If true, fulfill request synchronously and return JSON containing dataset_id."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/UploadDatasetResponseBody"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Response Uploaddataset"
                }
              }
            }
          },
          "403": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Forbidden"
          },
          "409": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "422": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "inputs"
                ],
                "properties": {
                  "action": {
                    "type": "string",
                    "enum": [
                      "create",
                      "append"
                    ]
                  },
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "inputs": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    }
                  },
                  "outputs": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    }
                  },
                  "metadata": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    }
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "input_keys[]",
                  "output_keys[]",
                  "file"
                ],
                "properties": {
                  "action": {
                    "type": "string",
                    "enum": [
                      "create",
                      "append"
                    ]
                  },
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "input_keys[]": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "uniqueItems": true
                  },
                  "output_keys[]": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "uniqueItems": true
                  },
                  "metadata_keys[]": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "uniqueItems": true
                  },
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/datasets/{id}/csv": {
      "get": {
        "tags": [
          "datasets"
        ],
        "summary": "Download dataset examples as CSV text file",
        "operationId": "getDatasetCsv",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the dataset.",
              "title": "Id"
            },
            "description": "The ID of the dataset."
          },
          {
            "name": "version_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "If provided, returns the data as of the specified version.",
              "title": "Version Id"
            },
            "description": "If provided, returns the data as of the specified version."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "text/csv": {
                "schema": {
                  "type": "string",
                  "contentMediaType": "text/csv"
                }
              }
            }
          },
          "403": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Forbidden"
          },
          "422": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/v1/datasets/{id}/jsonl/openai_ft": {
      "get": {
        "tags": [
          "datasets"
        ],
        "summary": "Download dataset examples as an OpenAI fine-tuning JSONL file.",
        "operationId": "getDatasetJSONLOpenAIFineTuning",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the dataset.",
              "title": "Id"
            },
            "description": "The ID of the dataset."
          },
          {
            "name": "version_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "If provided, returns the data as of the specified version.",
              "title": "Version Id"
            },
            "description": "If provided, returns the data as of the specified version."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Forbidden"
          },
          "422": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/v1/datasets/{id}/jsonl/openai_evals": {
      "get": {
        "tags": [
          "datasets"
        ],
        "summary": "Download dataset examples as OpenAI Evals JSONL file.",
        "operationId": "getDatasetJSONLOpenAIEvals",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the dataset.",
              "title": "Id"
            },
            "description": "The ID of the dataset."
          },
          {
            "name": "version_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "If provided, returns the data as of the specified version.",
              "title": "Version Id"
            },
            "description": "If provided, returns the data as of the specified version."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Forbidden"
          },
          "422": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/v1/experiment_evaluations": {
      "post": {
        "tags": [
          "experiments"
        ],
        "summary": "Creates or updates an evaluation for a specific experiment run",
        "operationId": "upsertExperimentEvaluation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpsertExperimentEvaluationRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpsertExperimentEvaluationResponseBody"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Experiment run not found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/experiments/{experiment_id}/runs": {
      "post": {
        "tags": [
          "experiments"
        ],
        "summary": "Creates a new experiment run for a specific experiment",
        "operationId": "createExperimentRun",
        "parameters": [
          {
            "name": "experiment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Experiment Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateExperimentRunRequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Experiment run created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/phoenix__server__api__routers__v1__experiment_runs__CreateExperimentResponseBody"
                }
              }
            }
          },
          "403": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Experiment or dataset example not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "experiments"
        ],
        "summary": "Lists all runs for a specific experiment",
        "operationId": "listExperimentRuns",
        "parameters": [
          {
            "name": "experiment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Experiment Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Experiment runs retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListExperimentRunsResponseBody"
                }
              }
            }
          },
          "403": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Experiment not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/datasets/{dataset_id}/experiments": {
      "post": {
        "tags": [
          "experiments"
        ],
        "summary": "Create an experiment using a dataset",
        "operationId": "createExperiment",
        "parameters": [
          {
            "name": "dataset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Dataset Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateExperimentRequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Experiment retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/phoenix__server__api__routers__v1__experiments__CreateExperimentResponseBody"
                }
              }
            }
          },
          "403": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Dataset or DatasetVersion not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/experiments/{experiment_id}": {
      "get": {
        "tags": [
          "experiments"
        ],
        "summary": "Get details of a specific experiment",
        "operationId": "getExperiment",
        "parameters": [
          {
            "name": "experiment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Experiment Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetExperimentResponseBody"
                }
              }
            }
          },
          "403": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Experiment not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/traces": {
      "post": {
        "tags": [
          "traces"
        ],
        "summary": "Send traces to Phoenix",
        "operationId": "addTraces",
        "parameters": [
          {
            "name": "content-type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Content-Type"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "403": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Forbidden"
          },
          "415": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Unsupported Media Type"
          },
          "422": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/x-protobuf": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          }
        }
      }
    },
    "/v1/trace_annotations": {
      "post": {
        "tags": [
          "traces"
        ],
        "summary": "Upsert annotations for traces",
        "operationId": "annotateTraces",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnnotateTracesRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotateTracesResponseBody"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Trace not found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/spans": {
      "post": {
        "summary": "Query spans using query DSL",
        "operationId": "querySpans",
        "parameters": [
          {
            "name": "project_name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "The project name to get evaluations from",
              "title": "Project Name"
            },
            "description": "The project name to get evaluations from"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuerySpansRequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "403": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/v1/span_annotations": {
      "post": {
        "summary": "Upsert annotations for spans",
        "operationId": "annotateSpans",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnnotateSpansRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Span annotations inserted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotateSpansResponseBody"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Span not found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AnnotateSpansRequestBody": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/SpanAnnotation"
            },
            "type": "array",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "AnnotateSpansRequestBody"
      },
      "AnnotateSpansResponseBody": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/InsertedSpanAnnotation"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "AnnotateSpansResponseBody"
      },
      "AnnotateTracesRequestBody": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/TraceAnnotation"
            },
            "type": "array",
            "title": "Data",
            "description": "The trace annotations to be upserted"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "AnnotateTracesRequestBody"
      },
      "AnnotateTracesResponseBody": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/InsertedTraceAnnotation"
            },
            "type": "array",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "AnnotateTracesResponseBody"
      },
      "AnnotationResult": {
        "properties": {
          "label": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Label",
            "description": "The label assigned by the annotation"
          },
          "score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Score",
            "description": "The score assigned by the annotation"
          },
          "explanation": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Explanation",
            "description": "Explanation of the annotation result"
          }
        },
        "type": "object",
        "required": [
          "label",
          "score"
        ],
        "title": "AnnotationResult"
      },
      "CreateExperimentRequestBody": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "version_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Version Id"
          },
          "repetitions": {
            "type": "integer",
            "title": "Repetitions",
            "default": 1
          }
        },
        "type": "object",
        "title": "CreateExperimentRequestBody"
      },
      "CreateExperimentRunRequestBody": {
        "properties": {
          "dataset_example_id": {
            "type": "string",
            "title": "Dataset Example Id"
          },
          "output": {
            "title": "Output"
          },
          "repetition_number": {
            "type": "integer",
            "title": "Repetition Number"
          },
          "start_time": {
            "type": "string",
            "format": "date-time",
            "title": "Start Time"
          },
          "end_time": {
            "type": "string",
            "format": "date-time",
            "title": "End Time"
          },
          "trace_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Trace Id"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          }
        },
        "type": "object",
        "required": [
          "dataset_example_id",
          "output",
          "repetition_number",
          "start_time",
          "end_time"
        ],
        "title": "CreateExperimentRunRequestBody"
      },
      "CreateExperimentRunResponseBodyData": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "The ID of the newly created experiment run"
          }
        },
        "type": "object",
        "required": [
          "id"
        ],
        "title": "CreateExperimentRunResponseBodyData"
      },
      "Dataset": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "metadata": {
            "type": "object",
            "title": "Metadata"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "description",
          "metadata",
          "created_at",
          "updated_at"
        ],
        "title": "Dataset"
      },
      "DatasetExample": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "input": {
            "type": "object",
            "title": "Input"
          },
          "output": {
            "type": "object",
            "title": "Output"
          },
          "metadata": {
            "type": "object",
            "title": "Metadata"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "input",
          "output",
          "metadata",
          "updated_at"
        ],
        "title": "DatasetExample"
      },
      "DatasetVersion": {
        "properties": {
          "version_id": {
            "type": "string",
            "title": "Version Id"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "metadata": {
            "type": "object",
            "title": "Metadata"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "version_id",
          "description",
          "metadata",
          "created_at"
        ],
        "title": "DatasetVersion"
      },
      "DatasetWithExampleCount": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "metadata": {
            "type": "object",
            "title": "Metadata"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "example_count": {
            "type": "integer",
            "title": "Example Count"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "description",
          "metadata",
          "created_at",
          "updated_at",
          "example_count"
        ],
        "title": "DatasetWithExampleCount"
      },
      "EvaluationResult": {
        "properties": {
          "label": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Label",
            "description": "The label assigned by the evaluation"
          },
          "score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Score",
            "description": "The score assigned by the evaluation"
          },
          "explanation": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Explanation",
            "description": "Explanation of the evaluation result"
          }
        },
        "type": "object",
        "title": "EvaluationResult"
      },
      "Experiment": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "dataset_id": {
            "type": "string",
            "title": "Dataset Id"
          },
          "dataset_version_id": {
            "type": "string",
            "title": "Dataset Version Id"
          },
          "repetitions": {
            "type": "integer",
            "title": "Repetitions"
          },
          "metadata": {
            "type": "object",
            "title": "Metadata"
          },
          "project_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Project Name"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "dataset_id",
          "dataset_version_id",
          "repetitions",
          "metadata",
          "project_name",
          "created_at",
          "updated_at"
        ],
        "title": "Experiment"
      },
      "ExperimentRun": {
        "properties": {
          "dataset_example_id": {
            "type": "string",
            "title": "Dataset Example Id"
          },
          "output": {
            "title": "Output"
          },
          "repetition_number": {
            "type": "integer",
            "title": "Repetition Number"
          },
          "start_time": {
            "type": "string",
            "format": "date-time",
            "title": "Start Time"
          },
          "end_time": {
            "type": "string",
            "format": "date-time",
            "title": "End Time"
          },
          "trace_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Trace Id"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          }
        },
        "type": "object",
        "required": [
          "dataset_example_id",
          "output",
          "repetition_number",
          "start_time",
          "end_time"
        ],
        "title": "ExperimentRun"
      },
      "GetDatasetResponseBody": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/DatasetWithExampleCount"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "GetDatasetResponseBody"
      },
      "GetExperimentResponseBody": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Experiment"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "GetExperimentResponseBody"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "InsertedSpanAnnotation": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "The ID of the inserted span annotation"
          }
        },
        "type": "object",
        "required": [
          "id"
        ],
        "title": "InsertedSpanAnnotation"
      },
      "InsertedTraceAnnotation": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "The ID of the inserted trace annotation"
          }
        },
        "type": "object",
        "required": [
          "id"
        ],
        "title": "InsertedTraceAnnotation"
      },
      "ListDatasetExamplesData": {
        "properties": {
          "dataset_id": {
            "type": "string",
            "title": "Dataset Id"
          },
          "version_id": {
            "type": "string",
            "title": "Version Id"
          },
          "examples": {
            "items": {
              "$ref": "#/components/schemas/DatasetExample"
            },
            "type": "array",
            "title": "Examples"
          }
        },
        "type": "object",
        "required": [
          "dataset_id",
          "version_id",
          "examples"
        ],
        "title": "ListDatasetExamplesData"
      },
      "ListDatasetExamplesResponseBody": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ListDatasetExamplesData"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "ListDatasetExamplesResponseBody"
      },
      "ListDatasetVersionsResponseBody": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/DatasetVersion"
            },
            "type": "array",
            "title": "Data"
          },
          "next_cursor": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Cursor"
          }
        },
        "type": "object",
        "required": [
          "data",
          "next_cursor"
        ],
        "title": "ListDatasetVersionsResponseBody"
      },
      "ListDatasetsResponseBody": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/Dataset"
            },
            "type": "array",
            "title": "Data"
          },
          "next_cursor": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Cursor"
          }
        },
        "type": "object",
        "required": [
          "data",
          "next_cursor"
        ],
        "title": "ListDatasetsResponseBody"
      },
      "ListExperimentRunsResponseBody": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/ExperimentRun"
            },
            "type": "array",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "ListExperimentRunsResponseBody"
      },
      "QuerySpansRequestBody": {
        "properties": {
          "queries": {
            "items": {
              "$ref": "#/components/schemas/SpanQuery"
            },
            "type": "array",
            "title": "Queries"
          },
          "start_time": {
            "type": "string",
            "format": "date-time",
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "limit": {
            "type": "integer",
            "title": "Limit",
            "default": 1000
          },
          "root_spans_only": {
            "type": "boolean",
            "title": "Root Spans Only",
            "default": false
          },
          "project_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Project Name",
            "description": "The name of the project to query. This parameter has been deprecated, use the project_name query parameter instead.",
            "deprecated": true
          },
          "stop_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Stop Time",
            "description": "An upper bound on the time to query for. This parameter has been deprecated, use the end_time parameter instead.",
            "deprecated": true
          }
        },
        "type": "object",
        "required": [
          "queries",
          "start_time"
        ],
        "title": "QuerySpansRequestBody"
      },
      "Result": {
        "properties": {
          "label": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Label",
            "description": "The label assigned by the annotation"
          },
          "score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Score",
            "description": "The score assigned by the annotation"
          },
          "explanation": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Explanation",
            "description": "Explanation of the annotation result"
          }
        },
        "type": "object",
        "title": "Result"
      },
      "SpanAnnotation": {
        "properties": {
          "span_id": {
            "type": "string",
            "title": "Span Id",
            "description": "The ID of the span being annotated"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the annotation"
          },
          "annotator_kind": {
            "type": "string",
            "enum": [
              "LLM",
              "HUMAN"
            ],
            "title": "Annotator Kind",
            "description": "The kind of annotator used for the annotation ('LLM' or 'HUMAN')"
          },
          "result": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Result"
              },
              {
                "type": "null"
              }
            ],
            "description": "The result of the annotation"
          },
          "metadata": {
            "type": "object",
            "title": "Metadata",
            "description": "Metadata for the annotation"
          }
        },
        "type": "object",
        "required": [
          "span_id",
          "name",
          "annotator_kind"
        ],
        "title": "SpanAnnotation"
      },
      "SpanQuery": {
        "properties": {
          "select": {
            "type": "object",
            "title": "Select"
          },
          "filter": {
            "type": "object",
            "title": "Filter"
          },
          "explode": {
            "type": "object",
            "title": "Explode"
          },
          "concat": {
            "type": "object",
            "title": "Concat"
          },
          "rename": {
            "type": "object",
            "title": "Rename"
          },
          "index": {
            "type": "object",
            "title": "Index"
          }
        },
        "type": "object",
        "required": [
          "select",
          "filter",
          "explode",
          "concat",
          "rename",
          "index"
        ],
        "title": "SpanQuery"
      },
      "TraceAnnotation": {
        "properties": {
          "trace_id": {
            "type": "string",
            "title": "Trace Id",
            "description": "The ID of the trace being annotated"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the annotation"
          },
          "annotator_kind": {
            "type": "string",
            "enum": [
              "LLM",
              "HUMAN"
            ],
            "title": "Annotator Kind",
            "description": "The kind of annotator used for the annotation (\"LLM\" or \"HUMAN\")"
          },
          "result": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AnnotationResult"
              },
              {
                "type": "null"
              }
            ],
            "description": "The result of the annotation"
          },
          "metadata": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Metadata",
            "description": "Metadata for the annotation"
          }
        },
        "type": "object",
        "required": [
          "trace_id",
          "name",
          "annotator_kind"
        ],
        "title": "TraceAnnotation"
      },
      "UploadDatasetData": {
        "properties": {
          "dataset_id": {
            "type": "string",
            "title": "Dataset Id"
          }
        },
        "type": "object",
        "required": [
          "dataset_id"
        ],
        "title": "UploadDatasetData"
      },
      "UploadDatasetResponseBody": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/UploadDatasetData"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "UploadDatasetResponseBody"
      },
      "UpsertExperimentEvaluationRequestBody": {
        "properties": {
          "experiment_run_id": {
            "type": "string",
            "title": "Experiment Run Id",
            "description": "The ID of the experiment run being evaluated"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the evaluation"
          },
          "annotator_kind": {
            "type": "string",
            "title": "Annotator Kind",
            "description": "The kind of annotator used for the evaluation"
          },
          "start_time": {
            "type": "string",
            "format": "date-time",
            "title": "Start Time",
            "description": "The start time of the evaluation in ISO format"
          },
          "end_time": {
            "type": "string",
            "format": "date-time",
            "title": "End Time",
            "description": "The end time of the evaluation in ISO format"
          },
          "result": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EvaluationResult"
              }
            ],
            "description": "The result of the evaluation"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error",
            "description": "Optional error message if the evaluation encountered an error"
          },
          "metadata": {
            "type": "object",
            "title": "Metadata",
            "description": "Metadata for the evaluation"
          },
          "trace_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Trace Id",
            "description": "Optional trace ID for tracking"
          }
        },
        "type": "object",
        "required": [
          "experiment_run_id",
          "name",
          "annotator_kind",
          "start_time",
          "end_time",
          "result"
        ],
        "title": "UpsertExperimentEvaluationRequestBody"
      },
      "UpsertExperimentEvaluationResponseBody": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/UpsertExperimentEvaluationResponseBodyData"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "UpsertExperimentEvaluationResponseBody"
      },
      "UpsertExperimentEvaluationResponseBodyData": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "The ID of the upserted experiment evaluation"
          }
        },
        "type": "object",
        "required": [
          "id"
        ],
        "title": "UpsertExperimentEvaluationResponseBodyData"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "phoenix__server__api__routers__v1__experiment_runs__CreateExperimentResponseBody": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CreateExperimentRunResponseBodyData"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "CreateExperimentResponseBody"
      },
      "phoenix__server__api__routers__v1__experiments__CreateExperimentResponseBody": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Experiment"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "CreateExperimentResponseBody"
      }
    }
  }
}
