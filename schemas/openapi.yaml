components:
  schemas:
    Dataset:
      properties:
        created_at:
          format: date-time
          title: Created At
          type: string
        description:
          title: Description
          type: string
        id:
          title: Id
          type: string
        metadata:
          title: Metadata
          type: object
        name:
          title: Name
          type: string
        updated_at:
          format: date-time
          title: Updated At
          type: string
      required:
      - id
      - name
      - description
      - metadata
      - created_at
      - updated_at
      title: Dataset
      type: object
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          title: Detail
          type: array
      title: HTTPValidationError
      type: object
    ListDatasetsResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/Dataset'
          title: Data
          type: array
        next_cursor:
          anyOf:
          - type: string
          - type: 'null'
          title: Next Cursor
      title: ListDatasetsResponse
      type: object
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          title: Location
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
      - loc
      - msg
      - type
      title: ValidationError
      type: object
info:
  description: Schema for Arize-Phoenix REST API
  title: Arize-Phoenix API
  version: 4.9.0
openapi: 3.1.0
paths:
  /v1/datasets:
    get:
      operationId: listDatasets
      parameters:
      - description: If provided, returns datasets starting with the provided cursor.
        in: query
        name: cursor
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: If provided, returns datasets starting with the provided cursor.
          title: Cursor
      - description: If provided, filters the returned datasets by name.
        in: query
        name: name
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: If provided, filters the returned datasets by name.
          title: Name
      - description: The maximum number of datasets to return at a time.
        in: query
        name: limit
        required: false
        schema:
          default: 10
          description: The maximum number of datasets to return at a time.
          title: Limit
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDatasetsResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Returns paginated lists of datasets.
      tags:
      - datasets
  /v1/datasets/upload:
    post:
      description: "summary: Upload dataset as either JSON or file (CSV or PyArrow)\n\
        operationId: uploadDataset\ntags:\n  - datasets\nparameters:\n  - in: query\n\
        \    name: sync\n    description: If true, fulfill request synchronously and\
        \ return JSON containing dataset_id\n    schema:\n      type: boolean\nrequestBody:\n\
        \  content:\n    application/json:\n      schema:\n        type: object\n\
        \        required:\n          - name\n          - inputs\n        properties:\n\
        \          action:\n            type: string\n            enum: [create, append]\n\
        \          name:\n            type: string\n          description:\n     \
        \       type: string\n          inputs:\n            type: array\n       \
        \     items:\n              type: object\n          outputs:\n           \
        \ type: array\n            items:\n              type: object\n          metadata:\n\
        \            type: array\n            items:\n              type: object\n\
        \    multipart/form-data:\n      schema:\n        type: object\n        required:\n\
        \          - name\n          - input_keys[]\n          - output_keys[]\n \
        \         - file\n        properties:\n          action:\n            type:\
        \ string\n            enum: [create, append]\n          name:\n          \
        \  type: string\n          description:\n            type: string\n      \
        \    input_keys[]:\n            type: array\n            items:\n        \
        \      type: string\n            uniqueItems: true\n          output_keys[]:\n\
        \            type: array\n            items:\n              type: string\n\
        \            uniqueItems: true\n          metadata_keys[]:\n            type:\
        \ array\n            items:\n              type: string\n            uniqueItems:\
        \ true\n          file:\n            type: string\n            format: binary\n\
        responses:\n  200:\n    description: Success\n  403:\n    description: Forbidden\n\
        \  409:\n    description: Dataset of the same name already exists\n  422:\n\
        \    description: Request body is invalid"
      operationId: upload_dataset_v1_datasets_upload_post
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
      summary: Upload Dataset
      tags:
      - datasets
  /v1/datasets/{id}:
    delete:
      description: "summary: Delete dataset by ID\noperationId: deleteDatasetById\n\
        tags:\n  - datasets\nparameters:\n  - in: path\n    name: id\n    required:\
        \ true\n    schema:\n      type: string\nresponses:\n  204:\n    description:\
        \ Success\n  403:\n    description: Forbidden\n  404:\n    description: Dataset\
        \ not found\n  422:\n    description: Dataset ID is invalid"
      operationId: delete_dataset_v1_datasets__id__delete
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
      summary: Delete Dataset
      tags:
      - datasets
    get:
      description: "summary: Get dataset by ID\noperationId: getDatasetById\ntags:\n\
        \  - datasets\nparameters:\n  - in: path\n    name: id\n    required: true\n\
        \    schema:\n      type: string\nresponses:\n  200:\n    description: Success\n\
        \    content:\n      application/json:\n        schema:\n          type: object\n\
        \          properties:\n            id:\n              type: string\n    \
        \        name:\n              type: string\n            description:\n   \
        \           type: string\n            metadata:\n              type: object\n\
        \            created_at:\n              type: string\n              format:\
        \ date-time\n            updated_at:\n              type: string\n       \
        \       format: date-time\n            example_count:\n              type:\
        \ integer\n  403:\n    description: Forbidden\n  404:\n    description: Dataset\
        \ not found"
      operationId: get_dataset_v1_datasets__id__get
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
      summary: Get Dataset
      tags:
      - datasets
  /v1/datasets/{id}/csv:
    get:
      description: "summary: Download dataset examples as CSV text file\noperationId:\
        \ getDatasetCsv\ntags:\n  - datasets\nparameters:\n  - in: path\n    name:\
        \ id\n    required: true\n    schema:\n      type: string\n    description:\
        \ Dataset ID\n  - in: query\n    name: version_id\n    schema:\n      type:\
        \ string\n    description: Dataset version ID. If omitted, returns the latest\
        \ version.\nresponses:\n  200:\n    description: Success\n    content:\n \
        \     text/csv:\n        schema:\n          type: string\n          contentMediaType:\
        \ text/csv\n          contentEncoding: gzip\n  403:\n    description: Forbidden\n\
        \  404:\n    description: Dataset does not exist.\n  422:\n    description:\
        \ Dataset ID or version ID is invalid."
      operationId: get_dataset_csv_v1_datasets__id__csv_get
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
      summary: Get Dataset Csv
      tags:
      - datasets
  /v1/datasets/{id}/examples:
    get:
      description: "summary: Get dataset examples by dataset ID\noperationId: getDatasetExamples\n\
        tags:\n  - datasets\nparameters:\n  - in: path\n    name: id\n    required:\
        \ true\n    schema:\n      type: string\n    description: Dataset ID\n  -\
        \ in: query\n    name: version_id\n    schema:\n      type: string\n    description:\
        \ Dataset version ID. If omitted, returns the latest version.\nresponses:\n\
        \  200:\n    description: Success\n    content:\n      application/json:\n\
        \        schema:\n          type: object\n          properties:\n        \
        \    data:\n              type: object\n              properties:\n      \
        \          dataset_id:\n                  type: string\n                 \
        \ description: ID of the dataset\n                version_id:\n          \
        \        type: string\n                  description: ID of the version\n\
        \                examples:\n                  type: array\n              \
        \    items:\n                    type: object\n                    properties:\n\
        \                      id:\n                        type: string\n       \
        \                 description: ID of the dataset example\n               \
        \       input:\n                        type: object\n                   \
        \     description: Input data of the example\n                      output:\n\
        \                        type: object\n                        description:\
        \ Output data of the example\n                      metadata:\n          \
        \              type: object\n                        description: Metadata\
        \ of the example\n                      updated_at:\n                    \
        \    type: string\n                        format: date-time\n           \
        \             description: ISO formatted timestamp of when the example was\
        \ updated\n                    required:\n                      - id\n   \
        \                   - input\n                      - output\n            \
        \          - metadata\n                      - updated_at\n              required:\n\
        \                - dataset_id\n                - version_id\n            \
        \    - examples\n  403:\n    description: Forbidden\n  404:\n    description:\
        \ Dataset does not exist."
      operationId: list_dataset_examples_v1_datasets__id__examples_get
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
      summary: List Dataset Examples
      tags:
      - datasets
  /v1/datasets/{id}/jsonl/openai_evals:
    get:
      description: "summary: Download dataset examples as OpenAI Evals JSONL file\n\
        operationId: getDatasetJSONLOpenAIEvals\ntags:\n  - datasets\nparameters:\n\
        \  - in: path\n    name: id\n    required: true\n    schema:\n      type:\
        \ string\n    description: Dataset ID\n  - in: query\n    name: version_id\n\
        \    schema:\n      type: string\n    description: Dataset version ID. If\
        \ omitted, returns the latest version.\nresponses:\n  200:\n    description:\
        \ Success\n    content:\n      text/plain:\n        schema:\n          type:\
        \ string\n          contentMediaType: text/plain\n          contentEncoding:\
        \ gzip\n  403:\n    description: Forbidden\n  404:\n    description: Dataset\
        \ does not exist.\n  422:\n    description: Dataset ID or version ID is invalid."
      operationId: get_dataset_jsonl_openai_evals_v1_datasets__id__jsonl_openai_evals_get
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
      summary: Get Dataset Jsonl Openai Evals
      tags:
      - datasets
  /v1/datasets/{id}/jsonl/openai_ft:
    get:
      description: "summary: Download dataset examples as OpenAI Fine-Tuning JSONL\
        \ file\noperationId: getDatasetJSONLOpenAIFineTuning\ntags:\n  - datasets\n\
        parameters:\n  - in: path\n    name: id\n    required: true\n    schema:\n\
        \      type: string\n    description: Dataset ID\n  - in: query\n    name:\
        \ version_id\n    schema:\n      type: string\n    description: Dataset version\
        \ ID. If omitted, returns the latest version.\nresponses:\n  200:\n    description:\
        \ Success\n    content:\n      text/plain:\n        schema:\n          type:\
        \ string\n          contentMediaType: text/plain\n          contentEncoding:\
        \ gzip\n  403:\n    description: Forbidden\n  404:\n    description: Dataset\
        \ does not exist.\n  422:\n    description: Dataset ID or version ID is invalid."
      operationId: get_dataset_jsonl_openai_ft_v1_datasets__id__jsonl_openai_ft_get
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
      summary: Get Dataset Jsonl Openai Ft
      tags:
      - datasets
  /v1/datasets/{id}/versions:
    get:
      description: "summary: Get dataset versions (sorted from latest to oldest)\n\
        operationId: getDatasetVersionsByDatasetId\ntags:\n  - datasets\nparameters:\n\
        \  - in: path\n    name: id\n    required: true\n    description: Dataset\
        \ ID\n    schema:\n      type: string\n  - in: query\n    name: cursor\n \
        \   description: Cursor for pagination.\n    schema:\n      type: string\n\
        \  - in: query\n    name: limit\n    description: Maximum number versions\
        \ to return.\n    schema:\n      type: integer\n      default: 10\nresponses:\n\
        \  200:\n    description: Success\n    content:\n      application/json:\n\
        \        schema:\n          type: object\n          properties:\n        \
        \    next_cursor:\n              type: string\n            data:\n       \
        \       type: array\n              items:\n                type: object\n\
        \                properties:\n                  version_id:\n            \
        \        type: string\n                  description:\n                  \
        \  type: string\n                  metadata:\n                    type: object\n\
        \                  created_at:\n                    type: string\n       \
        \             format: date-time\n  403:\n    description: Forbidden\n  422:\n\
        \    description: Dataset ID, cursor or limit is invalid."
      operationId: get_dataset_versions_v1_datasets__id__versions_get
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
      summary: Get Dataset Versions
      tags:
      - datasets

