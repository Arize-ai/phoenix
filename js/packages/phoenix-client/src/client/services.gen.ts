// This file is auto-generated by @hey-api/openapi-ts

import {
  createClient,
  createConfig,
  type Options,
} from "@hey-api/client-fetch";
import type {
  ListDatasetsData,
  ListDatasetsError,
  ListDatasetsResponse,
  DeleteDatasetByIdData,
  DeleteDatasetByIdError,
  DeleteDatasetByIdResponse,
  GetDatasetData,
  GetDatasetError,
  GetDatasetResponse,
  ListDatasetVersionsByDatasetIdData,
  ListDatasetVersionsByDatasetIdError,
  ListDatasetVersionsByDatasetIdResponse,
  UploadDatasetData2,
  UploadDatasetError,
  UploadDatasetResponse,
  GetDatasetExamplesData,
  GetDatasetExamplesError,
  GetDatasetExamplesResponse,
  GetDatasetCsvData,
  GetDatasetCsvError,
  GetDatasetCsvResponse,
  GetDatasetJsonlOpenAiFineTuningData,
  GetDatasetJsonlOpenAiFineTuningError,
  GetDatasetJsonlOpenAiFineTuningResponse,
  GetDatasetJsonlOpenAiEvalsData,
  GetDatasetJsonlOpenAiEvalsError,
  GetDatasetJsonlOpenAiEvalsResponse,
  CreateExperimentData,
  CreateExperimentError,
  CreateExperimentResponse,
  ListExperimentsData,
  ListExperimentsError,
  ListExperimentsResponse,
  GetExperimentData,
  GetExperimentError,
  GetExperimentResponse,
  AnnotateSpansData,
  AnnotateSpansError,
  AnnotateSpansResponse,
} from "./types.gen";

export const client = createClient(createConfig());

/**
 * List datasets
 */
export const listDatasets = <ThrowOnError extends boolean = false>(
  options?: Options<ListDatasetsData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    ListDatasetsResponse,
    ListDatasetsError,
    ThrowOnError
  >({
    ...options,
    url: "/v1/datasets",
  });
};

/**
 * Delete dataset by ID
 */
export const deleteDatasetById = <ThrowOnError extends boolean = false>(
  options: Options<DeleteDatasetByIdData, ThrowOnError>,
) => {
  return (options?.client ?? client).delete<
    DeleteDatasetByIdResponse,
    DeleteDatasetByIdError,
    ThrowOnError
  >({
    ...options,
    url: "/v1/datasets/{id}",
  });
};

/**
 * Get dataset by ID
 */
export const getDataset = <ThrowOnError extends boolean = false>(
  options: Options<GetDatasetData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    GetDatasetResponse,
    GetDatasetError,
    ThrowOnError
  >({
    ...options,
    url: "/v1/datasets/{id}",
  });
};

/**
 * List dataset versions
 */
export const listDatasetVersionsByDatasetId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ListDatasetVersionsByDatasetIdData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    ListDatasetVersionsByDatasetIdResponse,
    ListDatasetVersionsByDatasetIdError,
    ThrowOnError
  >({
    ...options,
    url: "/v1/datasets/{id}/versions",
  });
};

/**
 * Upload dataset from JSON, CSV, or PyArrow
 */
export const uploadDataset = <ThrowOnError extends boolean = false>(
  options?: Options<UploadDatasetData2, ThrowOnError>,
) => {
  return (options?.client ?? client).post<
    UploadDatasetResponse,
    UploadDatasetError,
    ThrowOnError
  >({
    ...options,
    url: "/v1/datasets/upload",
  });
};

/**
 * Get examples from a dataset
 */
export const getDatasetExamples = <ThrowOnError extends boolean = false>(
  options: Options<GetDatasetExamplesData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    GetDatasetExamplesResponse,
    GetDatasetExamplesError,
    ThrowOnError
  >({
    ...options,
    url: "/v1/datasets/{id}/examples",
  });
};

/**
 * Download dataset examples as CSV file
 */
export const getDatasetCsv = <ThrowOnError extends boolean = false>(
  options: Options<GetDatasetCsvData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    GetDatasetCsvResponse,
    GetDatasetCsvError,
    ThrowOnError
  >({
    ...options,
    url: "/v1/datasets/{id}/csv",
  });
};

/**
 * Download dataset examples as OpenAI fine-tuning JSONL file
 */
export const getDatasetJsonlOpenAiFineTuning = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetDatasetJsonlOpenAiFineTuningData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    GetDatasetJsonlOpenAiFineTuningResponse,
    GetDatasetJsonlOpenAiFineTuningError,
    ThrowOnError
  >({
    ...options,
    url: "/v1/datasets/{id}/jsonl/openai_ft",
  });
};

/**
 * Download dataset examples as OpenAI evals JSONL file
 */
export const getDatasetJsonlOpenAiEvals = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetDatasetJsonlOpenAiEvalsData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    GetDatasetJsonlOpenAiEvalsResponse,
    GetDatasetJsonlOpenAiEvalsError,
    ThrowOnError
  >({
    ...options,
    url: "/v1/datasets/{id}/jsonl/openai_evals",
  });
};

/**
 * Create experiment on a dataset
 */
export const createExperiment = <ThrowOnError extends boolean = false>(
  options: Options<CreateExperimentData, ThrowOnError>,
) => {
  return (options?.client ?? client).post<
    CreateExperimentResponse,
    CreateExperimentError,
    ThrowOnError
  >({
    ...options,
    url: "/v1/datasets/{dataset_id}/experiments",
  });
};

/**
 * List experiments by dataset
 */
export const listExperiments = <ThrowOnError extends boolean = false>(
  options: Options<ListExperimentsData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    ListExperimentsResponse,
    ListExperimentsError,
    ThrowOnError
  >({
    ...options,
    url: "/v1/datasets/{dataset_id}/experiments",
  });
};

/**
 * Get experiment by ID
 */
export const getExperiment = <ThrowOnError extends boolean = false>(
  options: Options<GetExperimentData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    GetExperimentResponse,
    GetExperimentError,
    ThrowOnError
  >({
    ...options,
    url: "/v1/experiments/{experiment_id}",
  });
};

/**
 * Create or update span annotations
 */
export const annotateSpans = <ThrowOnError extends boolean = false>(
  options: Options<AnnotateSpansData, ThrowOnError>,
) => {
  return (options?.client ?? client).post<
    AnnotateSpansResponse,
    AnnotateSpansError,
    ThrowOnError
  >({
    ...options,
    url: "/v1/span_annotations",
  });
};
