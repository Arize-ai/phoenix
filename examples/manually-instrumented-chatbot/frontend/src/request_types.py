# generated by datamodel-codegen:
#   filename:  schema.json
#   timestamp: 2024-04-06T17:45:52+00:00

from __future__ import annotations

from typing import List, Optional, Union

from pydantic import BaseModel, Field
from typing_extensions import Literal


class Message(BaseModel):
    role: Literal['system', 'assistant', 'user'] = Field(..., title='Role')
    content: str = Field(..., title='Content')
    uuid: str = Field(..., title='UUID')


class MessagesPayload(BaseModel):
    messages: List[Message] = Field(..., title='Messages')


class MessagesResponse(BaseModel):
    message: Message


class ValidationError(BaseModel):
    loc: List[Union[str, int]] = Field(..., title='Location')
    msg: str = Field(..., title='Message')
    type: str = Field(..., title='Error Type')


class HTTPValidationError(BaseModel):
    detail: Optional[List[ValidationError]] = Field(None, title='Detail')
