name: Publish Docker image

on:
  push:
    tags:
      - "arize-phoenix-v*"

jobs:
  push_to_registry:
    name: Push Docker images to Docker Hub
    runs-on: ubuntu-latest
    strategy:
      matrix:
        variant: [root, nonroot, debug]
    permissions:
      packages: write
      contents: read
    env:
      REGISTRY: arizephoenix
      IMAGE_NAME: phoenix
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      
      - name: Extract version from tag
        id: extract_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/arize-phoenix-v}" >> $GITHUB_ENV
      
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            version-${{ env.VERSION }}-${{ matrix.variant }}
            ${{ matrix.variant == 'root' && 'version-${{ env.VERSION }} latest' || '' }}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:version-${{ github.event.release.tag_name }}-${{ matrix.variant }}
            ${{ matrix.variant == 'root' && env.REGISTRY + '/' + env.IMAGE_NAME + ':latest' || '' }}
            ${{ matrix.variant == 'nonroot' && env.REGISTRY + '/' + env.IMAGE_NAME + ':nonroot' || '' }}
            ${{ matrix.variant == 'debug' && env.REGISTRY + '/' + env.IMAGE_NAME + ':debug' || '' }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BASE_IMAGE=${{ matrix.variant == 'root' && 'gcr.io/distroless/python3-debian12' || (matrix.variant == 'debug' && 'gcr.io/distroless/python3-debian12:debug') || 'gcr.io/distroless/python3-debian12:nonroot' }}
      
      
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ matrix.variant }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
      
